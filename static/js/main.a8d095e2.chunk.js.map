{"version":3,"sources":["components/app/app.module.css","components/modal/modal-overlay/modal-overlay.module.css","components/loader/loader.module.css","components/order-details/order-details.module.css","components/profile-menu/profile-menu.module.css","components/scrollable-list/scrollable-list.module.css","components/ingridient-details/ingridient-details.module.css","components/app-header/app-header.module.css","pages/feed.module.css","components/feed-detailed-card/feed-detailed-card.module.css","services/hooks.ts","utils/cookie.ts","utils/api-url.ts","utils/api-fetch.ts","services/actions/userActions.ts","services/actions/burgerVendor.ts","components/protected-route/protected-route.tsx","components/modal/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/ingridient-details/ingridient-details.tsx","components/app-header/app-header.tsx","components/ingridient-card/ingrdient-card.tsx","components/ingridients-cardlist/ingridients-cardlist.tsx","components/burger-ingredients/burger-ingredients.tsx","components/draggable-item/draggable-item.tsx","components/loader/loader.tsx","utils/utils.ts","components/burger-constructor/burger-constructor.tsx","components/order-details/order-details.tsx","components/burger-vendor/burger-vendor.tsx","components/feed-detailed-card/feed-detailed-card.tsx","pages/login.tsx","pages/registration.tsx","pages/forgot-password.tsx","pages/reset-password.tsx","components/profile-tab/profile-tab.tsx","components/profile-menu/profile-menu.tsx","pages/profile.tsx","services/actions/wsActions.ts","components/feed-card/feed-card.tsx","components/scrollable-list/scrollable-list.tsx","pages/orders.tsx","pages/ingridient-page.tsx","pages/feed.tsx","pages/order-page.tsx","components/app/app.tsx","services/middleware/socketMiddleware.ts","services/reducers/burgerVendor.ts","services/reducers/user.ts","services/reducers/wsReducer.ts","services/reducers/index.ts","services/store.ts","index.tsx","pages/auth-form.module.css","components/burger-ingredients/burger-ingredients.module.css","components/feed-card/feed-card.module.css","components/burger-constructor/burger-constructor.module.css","pages/profile.module.css","components/ingridient-card/ingridient-card.module.css","components/modal/modal.module.css","components/burger-vendor/burger-vendor.module.css","components/draggable-item/draggable-item.module.css","components/profile-tab/profile-tab.module.css"],"names":["module","exports","useAppSelector","selectorHook","useAppDispatch","dispatchHook","setCookie","name","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","encodeURIComponent","updatedCookie","propName","propValue","document","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","undefined","getAccessTokenLiteral","str","split","deleteCookie","baseUrl","urlUserDataEndpoint","wsOrders","wsAllOrders","checkResponse","res","a","ok","json","response","Promise","reject","LOGIN_SUCCESSFUL","SET_USER_DATA","LOGIN_FAILED","LOGOUT_SUCCESSFUL","ALLOW_RESET_PASSWORD","HAS_RESET_PASSWORD","registerNewUserThunk","data","dispatch","fetch","method","headers","body","JSON","stringify","then","fetchUserRegistration","user","accessToken","refreshToken","type","email","isLoggedIn","localStorage","setItem","catch","err","logInAppThunk","fetchLogIn","success","logOutThunk","token","getItem","removeItem","requestResetCodeThunk","userEmail","setNewPasswordThunk","newPassword","resetCode","fetchResetPassword","patchUserDataThunk","form","setFormValues","password","fetchChangeUserData","refreshAccessTokenThunk","safetyCounter","getUserThunk","authorization","message","confirmAuthThunk","hasAccessCookie","hasRefreshToken","TOGGLE_MODAL_VISIBILITY","SET_CURRENT_MODAL_TYPE","SET_INGRIDIENT_IN_MODAL","SET_ORDER_STATE","INGRIDIENT_FETCH_SUCCESS","INGRIDIENT_FETCH_ERROR","OPEN_MODAL","CLOSE_MODAL","SET_MODAL_TYPE","ADD_BUN","ADD_SAUCE","ADD_MAIN","UPDATE_DRAGGABLE_INGRIDIENTS","REMOVE_ALL_INGRIDIENTS","RESORT_DRAGGABLE_INGRIDIENTS","SET_CONSTRUCTOR_LOADER","postBurgerOrderThunk","url","createPostBody","status","ProtectedRoute","children","rest","store","userChecked","render","location","to","pathname","state","from","ModalOverlay","handleClick","className","stylesMO","modalOverlay","onClick","Modal","handleClose","modalRoot","getElementById","useEffect","escHandler","event","key","addEventListener","removeEventListener","ReactDOM","createPortal","modalStyles","modal","stopPropagation","closeButton","IngredientDetais","ingredientData","stylesID","wrap","modalHeader","style","src","alt","ingrImage","ingrInfo","nutrient","nutrientHeader","nutrientValue","test-id","AppHeader","headerStyles","header","headerContainer","navBurgerBuilder","headerButton","navlink","navButton","buttonCaption","userPanel","authButton","IngridientCard","objIngridient","history","useHistory","useLocation","useDrag","item","collect","monitor","outline","isDragging","dragRef","dragPreviewImg","React","useState","ingrCounter","setIngrCounter","bunInConstructor","burgerVendor","bun","draggableIngrInConstructor","draggableIngridients","counterValue","_id","forEach","getNumOfIngridients","DragPreviewImage","connect","image","cardStyles","ingrCard","push","ingredientModal","ref","itemPic","price","count","size","CardList","arrTargetedIngridients","ingridientsData","arrOfIngridients","filter","obj","map","index","BurgerIngredients","currentTab","setCurrentTab","bunRef","useRef","sauceRef","mainRef","scrollContainerRef","handleTabClick","tabName","current","scrollIntoView","block","behavior","scrollIntoRef","ingrStyles","ingridiensContainer","tabs","active","ingrDisplay","onScroll","scrollContainerPosition","getBoundingClientRect","top","bunHeaderPosition","sauceHeaderPosition","mainHeaderPosition","bunDiff","Math","abs","sauceDiff","mainDiff","ingrShowcase","ingrList","DraggableItem","ingrInstanceID","ingrData","ingrIndexInStoreArr","resortIngrList","findIngridient","stateDraggableIngridients","end","didDrop","dragItem","draggedPreview","useDrop","accept","canDrop","hover","draggedInstanceId","droppedIndexInStore","ingrIndexInStore","targetOfDrop","opacity","diStyles","draggableItime","node","draggableButton","text","thumbnail","arrOfIngrObjects","slice","splice","Loader","s","loader","getFormattedDate","currentDate","pastDate","formatedTime","format","diffDays","differenceInDays","calendarDate","formatDistance","now","locale","ru","getOrderStatus","orderStatus","getPrice","arr","reduce","previousValue","currentValue","getCompletedIngrList","orderData","allIngrCatalog","completedIngrList","ingredients","ingrId","ingrObj","BurgerConstructor","chosenBun","chosenDraggableIngr","loaderIsVisible","constructorLoaderIsVisible","addIngridientInConstructor","typeOfIngridient","objIngridientWithId","instanceID","drop","onDropHandler","background","isOver","dropTarget","findIngridientInStore","useCallback","targetIngrID","objIngrData","objIngr","indexOf","indexOfDraggedIngr","indexOfDroppedIngr","dropResort","arrWithOrderData","sendOrderToApi","container","chosenIngridients","topIngridinet","isLocked","length","draggableIngridinetContainer","ingr","bottomIngridinet","totalBar","priceOfBun","priceOfDraggableIngr","summ","ingridient","Number","getTotalPrice","margin","textAlign","justifyContent","display","paddingRight","OrderDetais","orderState","order","number","stylesOD","bgForCheck","BurgerVendor","modalIsVisible","currentModalType","ingrInModalData","dataIsLoading","ingrDataIsLoading","dataHasError","ingrDataHasError","headerSection","constructorContainer","DndProvider","backend","HTML5Backend","FeedDetailedCard","ws","detailedOrder","arrOfUsedIngr","bunItem","restIngr","includes","getIcon","imgContainer","backgroundImage","getListItem","amount","ingrItem","ingrIdent","image_mobile","priceContainer","ingrPrice","main","plane","createdAt","LoginPage","handleChange","e","target","handleSubmit","preventDefault","styles","onSubmit","placeholder","onChange","error","errorText","RegistrationPage","ForgotPage","canResetPassword","ResetPassword","hasResetPassword","console","log","ProfileTab","isActive","tab","tab_type_current","ProfileMenu","activeTab","menu","ProfilePage","userName","profileInfo","icon","buttonWrap","WS_OPEN_CONNECTION","WS_CONNECTED_SUCCESSFULLY","WS_ERROR","WS_GOT_ORDERS","WS_SEND_MESSAGE","WS_CLOSE_CONNECTION","WS_DISCONNECTED","SET_DETAILED_ORDER_IN_MODAL","wsActions","openConnection","onOpen","onError","onGotOrders","sendMessage","closeConnection","onClose","setOrderInModal","FeedCard","isPersonal","arrImages","normalizedPics","normalizedArr","i","reverse","formateArr","profileOrderModal","feedModal","iconsContainer","getIcons","ScrollableList","currentOrders","ordersData","orders","reversedOrdersList","ProfileOrdersPage","IngridientPage","id","useParams","ingridientProp","find","paddingTop","FeedPage","ordersTotalToday","totalToday","ordersTotalEver","total","оrdersDone","оrdersInWork","getLiElement","orderNumber","liElem","feedData","feedContent","feedChart","currentChart","ul","color","totalChart","totalBlock","bigHeader","OrderPage","selectedOrder","orderSource","App","action","modalIngredientOpen","modalFeedOrderOpen","modalProfileOrderOpen","goBack","Array","isArray","getIngridientsDataThunk","indexStyles","path","exact","blankDraggableIngr","proteins","fat","carbohydrates","calories","image_large","__v","initialState","userInitialState","wsInitialState","wsConnected","wsError","updatedAt","rootReducer","combineReducers","resortedArrOfIngridients","update","$splice","wsCreatedMiddleware","socket","next","payload","WebSocket","close","onopen","onerror","onmessage","parseData","parse","onclose","send","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","StrictMode","basename"],"mappings":"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","file":"static/js/main.a8d095e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"app_main__4WY5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalOverlay\":\"modal-overlay_modalOverlay__GptCg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__31hZl\",\"spin\":\"loader_spin__lUbWN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgForCheck\":\"order-details_bgForCheck__N9L3q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"profile-menu_menu__FyA3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"scrollable-list_main__GQsmK\",\"mainReversed\":\"scrollable-list_mainReversed__1l3w3 scrollable-list_main__GQsmK\",\"temporary\":\"scrollable-list_temporary__2Sl_A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"ingridient-details_wrap__2-LFK\",\"modalHeader\":\"ingridient-details_modalHeader__24jdl\",\"ingrImage\":\"ingridient-details_ingrImage__RdR48\",\"ingrInfo\":\"ingridient-details_ingrInfo__3X3TC\",\"nutrient\":\"ingridient-details_nutrient__3Wg7v\",\"nutrientHeader\":\"ingridient-details_nutrientHeader__3rb3o\",\"nutrientValue\":\"ingridient-details_nutrientValue__2SB2D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__180fU\",\"header-flex\":\"app-header_header-flex__1o29S\",\"headerContainer\":\"app-header_headerContainer__2jzR7 app-header_header-flex__1o29S\",\"userPanel\":\"app-header_userPanel__2yC6l\",\"navBurgerBuilder\":\"app-header_navBurgerBuilder__1RlW_ app-header_header-flex__1o29S\",\"navButton\":\"app-header_navButton__wvEce app-header_header-flex__1o29S\",\"authButton\":\"app-header_authButton__kXkIa app-header_header-flex__1o29S app-header_navButton__wvEce app-header_header-flex__1o29S\",\"headerButton\":\"app-header_headerButton__11GTm\",\"navlink\":\"app-header_navlink__3NGjM\",\"buttonCaption\":\"app-header_buttonCaption__2t1No\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerSection\":\"feed_headerSection__2SA8r\",\"feedData\":\"feed_feedData__2gA4q\",\"feedContent\":\"feed_feedContent__1be4i\",\"feedChart\":\"feed_feedChart__2K5WE\",\"currentOrders\":\"feed_currentOrders__HPNg_\",\"currentChart\":\"feed_currentChart__2UtwH\",\"ul\":\"feed_ul__3o8oq\",\"liElem\":\"feed_liElem__Aza89\",\"totalChart\":\"feed_totalChart__2PRp9\",\"totalBlock\":\"feed_totalBlock__3xVl2\",\"bigHeader\":\"feed_bigHeader__2XETl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"feed-detailed-card_main__2hLf4\",\"number\":\"feed-detailed-card_number__ZaSDA\",\"header\":\"feed-detailed-card_header__2hNWO\",\"status\":\"feed-detailed-card_status__3_eZx\",\"ingr\":\"feed-detailed-card_ingr__iXNXz\",\"plane\":\"feed-detailed-card_plane__1jLyT\",\"ingrList\":\"feed-detailed-card_ingrList__7ud1P\",\"price\":\"feed-detailed-card_price__2LbHd\",\"imgContainer\":\"feed-detailed-card_imgContainer__puxWu\",\"ingrItem\":\"feed-detailed-card_ingrItem__3WPOa\",\"ingrIdent\":\"feed-detailed-card_ingrIdent__2ujAz\",\"priceContainer\":\"feed-detailed-card_priceContainer__1umxu\",\"ingrPrice\":\"feed-detailed-card_ingrPrice__3ESz0\"};","import {\r\n  TypedUseSelectorHook,\r\n  useSelector as selectorHook,\r\n  useDispatch as dispatchHook\r\n} from 'react-redux';\r\nimport { AppDispatch, RootState, AppThunk } from './store';\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\n\r\nexport const useAppDispatch = () => dispatchHook<AppDispatch | AppThunk>();\r\n","export function setCookie(name: string, value: string | null, props: any) {\r\n  props = props || {};\r\n  let exp = props.expires;\r\n\r\n  if (typeof exp == \"number\" && exp) {\r\n    const d = new Date();\r\n    d.setTime(d.getTime() + exp * 1000);\r\n    exp = props.expires = d;\r\n  }\r\n\r\n  if (exp && exp.toUTCString) {\r\n    props.expires = exp.toUTCString();\r\n  }\r\n\r\n  if (value) {\r\n    value = encodeURIComponent(value);\r\n  }\r\n\r\n  let updatedCookie = name + \"=\" + value;\r\n  for (const propName in props) {\r\n    updatedCookie += \"; \" + propName;\r\n    const propValue = props[propName];\r\n    if (propValue !== true) {\r\n      updatedCookie += \"=\" + propValue;\r\n    }\r\n  }\r\n\r\n  document.cookie = updatedCookie;\r\n}\r\n\r\nexport const getCookie = (name: string): string | undefined => {\r\n  const matches = document.cookie.match(\r\n    new RegExp(\r\n      //eslint-disable-next-line\r\n      \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, \"\\\\$1\") + \"=([^;]*)\"\r\n    )\r\n  );\r\n  return matches ? decodeURIComponent(matches[1]) : undefined;\r\n};\r\n\r\nexport const getAccessTokenLiteral = (): string => {\r\n  let str = getCookie('accessToken');\r\n  if (str) {\r\n    str = str.split(\"Bearer \")[1]\r\n  } else {\r\n    str = '';\r\n  }\r\n  return str;\r\n}\r\n\r\nexport function deleteCookie(name: string) {\r\n  setCookie(name, null, { expires: -1 });\r\n}","export const baseUrl = 'https://norma.nomoreparties.space/api';\r\n\r\nexport const urlApiGetIngridients = baseUrl + '/ingredients';\r\nexport const urlApiPostOrder = baseUrl + '/orders';\r\n\r\nexport const urlLoginRout = baseUrl + '/auth/login';\r\nexport const urlLogoutRout = baseUrl + '/auth/logout';\r\nexport const urlUserDataEndpoint = baseUrl + '/auth/user';\r\nexport const urlApiToken = baseUrl + '/auth/token';\r\nexport const urlUserRegistration = baseUrl + '/auth/register';\r\n\r\nexport const urlResetPassword = baseUrl + '/password-reset';\r\nexport const urlSetNewPassword = baseUrl + '/password-reset/reset';\r\n\r\nexport const wsOrders: string = 'wss://norma.nomoreparties.space/orders'\r\nexport const wsAllOrders: string = wsOrders + '/all';","import { getCookie } from './cookie';\r\nimport {\r\n  urlLoginRout,\r\n  urlLogoutRout,\r\n  urlUserDataEndpoint,\r\n  urlApiToken,\r\n  urlUserRegistration,\r\n  urlResetPassword,\r\n  urlSetNewPassword,\r\n} from './api-url';\r\n\r\ntype TRegistrationData = {\r\n  'email': string,\r\n  'password': string,\r\n  'name': string,\r\n}\r\n\r\nexport async function checkResponse(res: Response) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  const response = await res.json();\r\n  return Promise.reject(response);\r\n}\r\n\r\nexport function fetchUserRegistration(data: TRegistrationData) {\r\n  return fetch(urlUserRegistration, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8'\r\n    },\r\n    body: JSON.stringify(data), // email, password, name\r\n  })\r\n      .then(checkResponse)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n}\r\n\r\ntype TLogInData = {\r\n  'email': string,\r\n  'password': string,\r\n}\r\n\r\nexport function fetchLogIn(data: TLogInData) {\r\n  return fetch(urlLoginRout, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8'\r\n    },\r\n    body: JSON.stringify(data),\r\n  })\r\n      .then(checkResponse)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n}\r\n\r\nexport function fetchRequestResetCode(userEmail: string) {\r\n  return fetch(urlResetPassword, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8'\r\n    },\r\n    body: JSON.stringify({ email: userEmail }),\r\n  })\r\n      .then(checkResponse)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n}\r\n\r\nexport function fetchResetPassword(newPassword: string, resetCode: string) {\r\n  return fetch(urlSetNewPassword, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8'\r\n    },\r\n    body: JSON.stringify({\r\n      \"password\": newPassword,\r\n      \"token\": resetCode\r\n    }),\r\n  })\r\n      .then(checkResponse)\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n}\r\n\r\nexport function fetchGetUserData() {\r\n\r\n  return fetch(urlUserDataEndpoint, {\r\n    headers: {\r\n      method: 'GET',\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n      authorization: getCookie('accessToken') as string,\r\n    },\r\n  })\r\n      .then(checkResponse)\r\n      .then((res) => {\r\n        if (res[\"success\"] === false) {\r\n        }\r\n        return res;\r\n      })\r\n}\r\n\r\ntype TChangeUserDataArg = {\r\n  \"name\": string,\r\n  \"email\": string,\r\n  \"password\": string,\r\n}\r\n\r\nexport function fetchChangeUserData(form: TChangeUserDataArg) {\r\n\r\n  return fetch(urlUserDataEndpoint, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n      'Authorization': getCookie('accessToken') as string,\r\n    },\r\n    body: JSON.stringify({\r\n      \"name\": form.name,\r\n      \"email\": form.email,\r\n      \"password\": form.password,\r\n    })\r\n  })\r\n      .then(checkResponse)\r\n      .then((res) => {\r\n        if (res[\"success\"] === false) {\r\n        }\r\n        return res;\r\n      })\r\n}\r\n\r\nexport function fetchRefreshTokens() {\r\n  return fetch(urlApiToken, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    },\r\n    body: JSON.stringify({ token: localStorage.getItem('refreshToken') }),\r\n  })\r\n      .then(checkResponse)\r\n      .then((res) => {\r\n        if (res[\"success\"] === false) {\r\n          return false;\r\n        }\r\n        return res;\r\n      });\r\n}\r\n\r\nexport function fetchLogOut() {\r\n  return fetch(urlLogoutRout, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8'\r\n    },\r\n    body: JSON.stringify({ token: localStorage.getItem('refreshToken'), }),\r\n  })\r\n      .then(checkResponse)\r\n      .then((res) => {\r\n        if (res[\"success\"] === false) {\r\n        }\r\n        return res;\r\n      })\r\n}","import {\r\n  fetchLogIn,\r\n  fetchLogOut,\r\n  fetchGetUserData,\r\n  fetchRefreshTokens,\r\n  fetchUserRegistration,\r\n  fetchRequestResetCode,\r\n  fetchResetPassword,\r\n  fetchChangeUserData,\r\n} from '../../utils/api-fetch';\r\nimport { setCookie, deleteCookie, getCookie } from '../../utils/cookie';\r\nimport { TUserForm, TLoginForm } from '../../utils/types';\r\nimport { AppDispatch, AppThunk } from '../store';\r\n\r\nexport const LOGIN_SUCCESSFUL: 'LOGIN_SUCCESSFUL' = 'LOGIN_SUCCESSFUL';\r\nexport const SET_USER_DATA: 'SET_USER_DATA' = 'SET_USER_DATA';\r\nexport const LOGIN_FAILED: 'LOGIN_FAILED' = 'LOGIN_FAILED';\r\nexport const LOGOUT_SUCCESSFUL: 'LOGOUT_SUCCESSFUL' = 'LOGOUT_SUCCESSFUL';\r\nexport const ALLOW_RESET_PASSWORD: 'ALLOW_RESET_PASSWORD' = 'ALLOW_RESET_PASSWORD';\r\nexport const HAS_RESET_PASSWORD: 'HAS_RESET_PASSWORD' = 'HAS_RESET_PASSWORD';\r\n\r\nexport interface ILoginSuccessful {\r\n  readonly type: typeof LOGIN_SUCCESSFUL;\r\n  readonly name: string,\r\n  readonly email: string\r\n}\r\n\r\nexport const LoginSuccessful = (name: string, email: string): ILoginSuccessful => {\r\n  return {\r\n    type: LOGIN_SUCCESSFUL,\r\n    name,\r\n    email,\r\n  };\r\n}\r\n\r\nexport interface ISetUserData {\r\n  readonly type: typeof SET_USER_DATA;\r\n  readonly name: string,\r\n  readonly email: string,\r\n}\r\n\r\nexport interface ILoginFailed {\r\n  readonly type: typeof LOGIN_FAILED;\r\n}\r\n\r\nexport interface ILogoutSuccessful {\r\n  readonly type: typeof LOGOUT_SUCCESSFUL;\r\n}\r\n\r\nexport interface IAllowResetPassword {\r\n  readonly type: typeof ALLOW_RESET_PASSWORD;\r\n}\r\n\r\nexport interface IHasResetPassword {\r\n  readonly type: typeof HAS_RESET_PASSWORD;\r\n}\r\n\r\nexport type TUserActionsUnion = ILoginSuccessful | ISetUserData | ILoginFailed | ILogoutSuccessful | IAllowResetPassword | IHasResetPassword;\r\n\r\nexport const registerNewUserThunk: AppThunk = (data: TUserForm) => {\r\n\r\n  return function (dispatch: AppDispatch) {\r\n    fetchUserRegistration(data)\r\n      .then(({ user, accessToken, refreshToken }) => {\r\n        dispatch({\r\n          type: LOGIN_SUCCESSFUL,\r\n          name: user.name,\r\n          email: user.email,\r\n          isLoggedIn: true,\r\n        });\r\n        setCookie(\"accessToken\", accessToken, { expires: 20 * 60 });\r\n        localStorage.setItem('refreshToken', refreshToken);\r\n      })\r\n      .catch(err => {\r\n        return;\r\n      });\r\n  }\r\n}\r\n\r\nexport const logInAppThunk: AppThunk = (data: TLoginForm) => {\r\n\r\n  return function (dispatch: AppDispatch) {\r\n    fetchLogIn(data)\r\n      .then(({ user, accessToken, refreshToken, success }) => {\r\n        if (success === true) {\r\n          dispatch({\r\n            type: LOGIN_SUCCESSFUL,\r\n            name: user.name,\r\n            email: user.email,\r\n          });\r\n\r\n          setCookie(\"accessToken\", accessToken, { expires: 20 * 60 });\r\n          localStorage.setItem('refreshToken', refreshToken);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        dispatch({\r\n          type: LOGIN_FAILED,\r\n\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport const logOutThunk: AppThunk = () => {\r\n\r\n  return function (dispatch: AppDispatch) {\r\n\r\n    fetchLogOut()\r\n      .then((res) => {\r\n        if (res.success === true) {\r\n          deleteCookie('accessToken');\r\n          localStorage.removeItem('refreshToken');\r\n\r\n          dispatch({\r\n            type: LOGOUT_SUCCESSFUL,\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        deleteCookie('accessToken');\r\n        localStorage.removeItem('refreshToken');\r\n        dispatch({\r\n          type: LOGOUT_SUCCESSFUL,\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport const requestResetCodeThunk: AppThunk = (email: string) => {\r\n\r\n  return function (dispatch: AppDispatch) {\r\n    fetchRequestResetCode(email)\r\n      .then(res => {\r\n\r\n        if (res.success === true) {\r\n          dispatch({\r\n            type: ALLOW_RESET_PASSWORD,\r\n          });\r\n          setCookie('canResetPassword', 'yes', { expires: 60 * 60 * 1 });\r\n        }\r\n      })\r\n      .catch(err => {\r\n      })\r\n  }\r\n}\r\n\r\nexport const setNewPasswordThunk: AppThunk = (newPassword: string, resetCode: string) => {\r\n\r\n  return function (dispatch: AppDispatch) {\r\n\r\n    fetchResetPassword(newPassword, resetCode)\r\n      .then(res => {\r\n        if (res.success === true) {\r\n          dispatch({\r\n            type: HAS_RESET_PASSWORD,\r\n          });\r\n\r\n          setCookie('canResetPassword', 'no', { expires: -1 });\r\n        }\r\n      })\r\n      .catch(err => {\r\n      })\r\n  }\r\n}\r\n\r\nexport const patchUserDataThunk: AppThunk = (form: TUserForm, setFormValues) => {\r\n\r\n  return function (dispatch: AppDispatch) {\r\n    fetchChangeUserData(form)\r\n      .then(res => {\r\n\r\n        dispatch({\r\n          type: SET_USER_DATA,\r\n          name: res.user.name,\r\n          email: res.user.email,\r\n        });\r\n\r\n        setFormValues({ name: res.user.name, email: res.user.email, password: '' });\r\n      })\r\n  }\r\n}\r\n\r\nexport const refreshAccessTokenThunk: AppThunk = (safetyCounter: number) => {\r\n\r\n  return function (dispatch: AppDispatch | AppThunk) {\r\n    fetchRefreshTokens()\r\n      .then(({ accessToken, refreshToken }) => {\r\n        setCookie(\"accessToken\", accessToken, { expires: 20 * 60 });\r\n        localStorage.setItem('refreshToken', refreshToken);\r\n\r\n        dispatch(getUserThunk(safetyCounter));\r\n      })\r\n      .catch((err) => {\r\n        return;\r\n      })\r\n  }\r\n}\r\n\r\nexport const getUserThunk: AppThunk = (safetyCounter: number) => {\r\n\r\n  safetyCounter++;\r\n  if (safetyCounter > 2) {\r\n    return function () {\r\n    }\r\n  }\r\n\r\n  return function (dispatch: AppDispatch | AppThunk) {\r\n    fetchGetUserData()\r\n      .then(({ user, success }) => {\r\n        if (success === true) {\r\n\r\n          dispatch({\r\n            type: SET_USER_DATA,\r\n            name: user.name,\r\n            email: user.email,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.message === 'jwt expired') {\r\n          dispatch(refreshAccessTokenThunk(safetyCounter)); // сюда пробрасываем safetyCounter\r\n        } else {\r\n        }\r\n\r\n      });\r\n  }\r\n}\r\n\r\nexport const confirmAuthThunk: AppThunk = () => {\r\n\r\n  return async function (dispatch: AppDispatch | AppThunk) {\r\n    const hasAccessCookie = (getCookie('accessToken') != null);\r\n    const hasRefreshToken = (localStorage.getItem('refreshToken') != null);\r\n\r\n    if (hasAccessCookie) {\r\n      const safetyCounter = 0;\r\n      dispatch(getUserThunk(safetyCounter));\r\n      return 'has logged in';\r\n    }\r\n\r\n    if (!hasAccessCookie && hasRefreshToken) {\r\n      const safetyCounter = 1;\r\n      dispatch(refreshAccessTokenThunk(safetyCounter));\r\n      return 'has refreshed tokens, than logged in';\r\n    }\r\n\r\n  }\r\n}\r\n\r\n\r\n","import { getCookie } from '../../utils/cookie';\r\nimport { TIngredientObjData, TOrderData, TDraggableIngr, TModalType } from '../../utils/types';\r\nimport { AppDispatch, AppThunk } from '../store';\r\n\r\n\r\nexport const TOGGLE_MODAL_VISIBILITY: 'TOGGLE_MODAL_VISIBILITY' = 'TOGGLE_MODAL_VISIBILITY';\r\nexport const SET_CURRENT_MODAL_TYPE: 'SET_CURRENT_MODAL_TYPE' = 'SET_CURRENT_MODAL_TYPE';\r\nexport const SET_INGRIDIENT_IN_MODAL: 'SET_INGRIDIENT_IN_MODAL' = 'SET_INGRIDIENT_IN_MODAL';\r\nexport const SET_ORDER_STATE: 'SET_ORDER_STATE' = 'SET_ORDER_STATE';\r\nexport const INGRIDIENT_FETCH_SUCCESS: 'INGRIDIENT_FETCH_SUCCESS' = 'INGRIDIENT_FETCH_SUCCESS';\r\nexport const INGRIDIENT_FETCH_ERROR: 'INGRIDIENT_FETCH_ERROR' = 'INGRIDIENT_FETCH_ERROR';\r\nexport const OPEN_MODAL: 'OPEN_MODAL' = 'OPEN_MODAL';\r\nexport const CLOSE_MODAL: 'CLOSE_MODAL' = 'CLOSE_MODAL';\r\nexport const SET_MODAL_TYPE: 'SET_CURRENT_MODAL_TYPE' = 'SET_CURRENT_MODAL_TYPE';\r\nexport const ADD_BUN: 'ADD_BUN' = 'ADD_BUN';\r\nexport const ADD_SAUCE: 'ADD_SAUCE' = 'ADD_SAUCE';\r\nexport const ADD_MAIN: 'ADD_MAIN' = 'ADD_MAIN';\r\nexport const UPDATE_DRAGGABLE_INGRIDIENTS: 'UPDATE_DRAGGABLE_INGRIDIENTS' = 'UPDATE_DRAGGABLE_INGRIDIENTS';\r\nexport const REMOVE_ALL_INGRIDIENTS: 'REMOVE_ALL_INGRIDIENTS' = 'REMOVE_ALL_INGRIDIENTS';\r\nexport const RESORT_DRAGGABLE_INGRIDIENTS: 'RESORT_DRAGGABLE_INGRIDIENTS' = 'RESORT_DRAGGABLE_INGRIDIENTS';\r\nexport const SET_CONSTRUCTOR_LOADER: 'SET_CONSTRUCTOR_LOADER' = 'SET_CONSTRUCTOR_LOADER';\r\n\r\nexport interface ISetConstructorLoader {\r\n    readonly type: typeof SET_CONSTRUCTOR_LOADER,\r\n    readonly value: boolean,\r\n}\r\n\r\nexport interface IToggleModalVisibility {\r\n    readonly type: typeof TOGGLE_MODAL_VISIBILITY,\r\n    readonly value: boolean,\r\n}\r\n\r\nexport interface ISetCurrentModalType {\r\n    readonly type: typeof SET_CURRENT_MODAL_TYPE,\r\n    readonly value: TModalType,\r\n}\r\n\r\nexport interface ISetIngrInModal {\r\n    readonly type: typeof SET_INGRIDIENT_IN_MODAL,\r\n    readonly value: TIngredientObjData,\r\n}\r\n\r\nexport interface ISetOrderState {\r\n    readonly type: typeof SET_ORDER_STATE,\r\n    readonly value: TOrderData,\r\n}\r\n\r\nexport interface IIngrFetchSuccess {\r\n    readonly type: typeof INGRIDIENT_FETCH_SUCCESS,\r\n    readonly value: Array<TIngredientObjData>,\r\n}\r\n\r\nexport interface IIngrFetchError {\r\n    readonly type: typeof INGRIDIENT_FETCH_ERROR,\r\n}\r\n\r\nexport interface IOpenModal {\r\n    readonly type: typeof OPEN_MODAL,\r\n}\r\n\r\nexport interface ICloseModal {\r\n    readonly type: typeof CLOSE_MODAL,\r\n}\r\n\r\nexport interface ISetModalType {\r\n    readonly type: typeof SET_MODAL_TYPE,\r\n    readonly value: TModalType,\r\n}\r\n\r\nexport interface IAddBun {\r\n    readonly type: typeof ADD_BUN,\r\n    readonly value: TDraggableIngr,\r\n}\r\n\r\nexport interface IAddSauce {\r\n    readonly type: typeof ADD_SAUCE,\r\n    readonly value: TDraggableIngr,\r\n}\r\n\r\nexport interface IAddMain {\r\n    readonly type: typeof ADD_MAIN,\r\n    readonly value: TDraggableIngr,\r\n}\r\n\r\nexport interface IUpdateDraggableIngr {\r\n    readonly type: typeof UPDATE_DRAGGABLE_INGRIDIENTS,\r\n    readonly value: Array<TDraggableIngr>,\r\n}\r\n\r\nexport interface IResortDraggableIngr {\r\n    readonly type: typeof RESORT_DRAGGABLE_INGRIDIENTS,\r\n    readonly indexOfDraggedIngr: number,\r\n    readonly indexOfDroppedIngr: number,\r\n\r\n}\r\n\r\nexport interface IRemoveAllIngr {\r\n    readonly type: typeof REMOVE_ALL_INGRIDIENTS,\r\n}\r\n\r\nexport type TBurgerVendorActionsUnion = IToggleModalVisibility | ISetCurrentModalType | ISetIngrInModal | ISetOrderState | IIngrFetchSuccess | IIngrFetchError | IOpenModal | ICloseModal | ISetModalType | IAddBun | IAddSauce | IAddMain | IUpdateDraggableIngr | IResortDraggableIngr | IRemoveAllIngr | ISetConstructorLoader;\r\n\r\nexport const getIngridientsDataThunk: AppThunk = (url = '') => {\r\n\r\n    //@ts-ignore\r\n    return function (dispatch: AppDispatch) {\r\n        fetch(url)\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(res.status);\r\n            })\r\n            .then((res) => {\r\n\r\n                if (!(Array.isArray(res.data))) {\r\n                    return Promise.reject(res);\r\n                }\r\n\r\n                dispatch({\r\n                    type: INGRIDIENT_FETCH_SUCCESS,\r\n                    value: res.data,\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                dispatch({\r\n                    type: INGRIDIENT_FETCH_ERROR,\r\n                })\r\n            });\r\n    };\r\n};\r\n\r\nexport const postBurgerOrderThunk: AppThunk = (url = '', createPostBody: any) => {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch({\r\n            type: SET_CONSTRUCTOR_LOADER,\r\n            value: true,\r\n        });\r\n        fetch(url, {\r\n            method: 'POST',\r\n            //@ts-ignore\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n                authorization: getCookie('accessToken'),\r\n            },\r\n            body: JSON.stringify(createPostBody())\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(res.status);\r\n            })\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: SET_ORDER_STATE,\r\n                    value: res,\r\n                });\r\n                dispatch({\r\n                    type: SET_CONSTRUCTOR_LOADER,\r\n                    value: false,\r\n                });\r\n            })\r\n            .then(() => {\r\n                dispatch({\r\n                    type: OPEN_MODAL,\r\n                });\r\n                dispatch({\r\n                    type: SET_MODAL_TYPE,\r\n                    value: 'OrderDetails',\r\n                });\r\n                dispatch({\r\n                    type: REMOVE_ALL_INGRIDIENTS,\r\n                });\r\n            })\r\n            .catch((err) => {\r\n            });\r\n    }\r\n};","import { Route, Redirect } from 'react-router-dom';\r\nimport { useAppSelector } from '../../services/hooks';\r\nimport { RouteProps } from 'react-router';\r\n\r\nexport function ProtectedRoute({ children, ...rest }: RouteProps) {\r\n\r\n  const { isLoggedIn, userChecked } = useAppSelector((store) => store.user);\r\n\r\n  if (localStorage.getItem('refreshToken') && !userChecked) return null;\r\n\r\n  return (\r\n    <Route {...rest} render={({ location }) =>\r\n      isLoggedIn ?\r\n        (children) :\r\n        (<Redirect to={{\r\n          pathname: \"/login\",\r\n          state: { from: location },\r\n        }} />)\r\n    } />\r\n  );\r\n}\r\n","import { FC } from 'react';\r\nimport stylesMO from './modal-overlay.module.css';\r\n\r\ntype TModalOverlayProps = {\r\n  handleClick: () => void,\r\n}\r\n\r\nconst ModalOverlay: FC<TModalOverlayProps> = ({ handleClick, children }) => {\r\n\r\n  return (\r\n    <div className={stylesMO.modalOverlay} onClick={handleClick}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalOverlay;","import React, {FC, ReactNode, useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport modalStyles from './modal.module.css';\r\nimport ModalOverlay from './modal-overlay/modal-overlay';\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\ninterface IModalProps {\r\n    children: ReactNode;\r\n    handleClose: () => void;\r\n}\r\n\r\nconst Modal: FC<IModalProps> = ({ children, handleClose }) => {\r\n    const modalRoot = document.getElementById(\"react-modals\") as HTMLElement;\r\n\r\n    const stopPropagation = (event: React.MouseEvent<HTMLElement>) => {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const escHandler = (event: KeyboardEvent) => {\r\n            if (event.key === 'Escape') {\r\n                handleClose();\r\n            }\r\n        }\r\n        document.addEventListener('keydown', escHandler);\r\n        return () => document.removeEventListener('keydown', escHandler);\r\n    })\r\n\r\n    return ReactDOM.createPortal(\r\n        (\r\n            <ModalOverlay handleClick={handleClose} >\r\n                <article className={modalStyles.modal} onClick={stopPropagation}>\r\n                    <button onClick={handleClose} className={modalStyles.closeButton}>\r\n                        <CloseIcon type=\"primary\" />\r\n                    </button>\r\n                    {children}\r\n                </article>\r\n            </ModalOverlay>\r\n        ), modalRoot\r\n    );\r\n}\r\n\r\nexport default Modal;","import stylesID from './ingridient-details.module.css';\r\nimport { TIngredientObjData } from '../../utils/types';\r\n\r\ntype TIngredientDetaisProps = {\r\n    ingredientData: TIngredientObjData\r\n};\r\n\r\nfunction IngredientDetais({ ingredientData }: TIngredientDetaisProps) {\r\n\r\n    return (\r\n        <div className={stylesID.wrap}>\r\n            <h2 className={stylesID.modalHeader + ' text  text_type_main-large mt-10 ml-10 mb-3'} style={{}}>Детали ингредиента</h2>\r\n            <img src={ingredientData['image_large']} alt={ingredientData['name']} className={stylesID.ingrImage + ' mb-4'} />\r\n            <p className={'text  text_type_main-medium mb-4'}>{ingredientData['name']}</p>\r\n\r\n            <ul className={stylesID.ingrInfo}>\r\n                <li className={stylesID.nutrient}>\r\n                    <h5 className={stylesID.nutrientHeader + ' text  text_type_main-default text_color_inactive'}>Калории,ккал</h5>\r\n                    <p className={stylesID.nutrientValue + ' text text_type_digits-default  text_color_inactive'} test-id='ingrDetails_calories'>{ingredientData['calories']}</p>\r\n                </li>\r\n                <li className={stylesID.nutrient + ' text  text_type_main-default text_color_inactive'}>\r\n                    <h5 className={stylesID.nutrientHeader + ' text  text_type_main-default text_color_inactive'}>Белки, г</h5>\r\n                    <p className={stylesID.nutrientValue + ' text text_type_digits-default  text_color_inactive'} test-id='ingrDetails_proteins'>{ingredientData['proteins']}</p>\r\n                </li>\r\n                <li className={stylesID.nutrient + ' text  text_type_main-default text_color_inactive'}>\r\n                    <h5 className={stylesID.nutrientHeader + ' text  text_type_main-default text_color_inactive'}>Жиры, г</h5>\r\n                    <p className={stylesID.nutrientValue + ' text text_type_digits-default  text_color_inactive'} test-id='ingrDetails_fats'>{ingredientData['fat']}</p>\r\n                </li>\r\n                <li className={stylesID.nutrient + ' text  text_type_main-default text_color_inactive'}>\r\n                    <h5 className={stylesID.nutrientHeader + ' text  text_type_main-default text_color_inactive'}>Углеводы, г</h5>\r\n                    <p className={stylesID.nutrientValue + ' text text_type_digits-default  text_color_inactive'} test-id='ingrDetails_carbo'>{ingredientData['carbohydrates']}</p>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IngredientDetais;","import React from \"react\";\r\nimport headerStyles from \"./app-header.module.css\";\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Logo,\r\n  BurgerIcon,\r\n  ListIcon,\r\n  ProfileIcon,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nfunction AppHeader() {\r\n  return (\r\n    <header className={headerStyles.header}>\r\n      <div className={headerStyles.headerContainer}>\r\n        <nav className='text text_type_main-default'>\r\n          <ul className={headerStyles.navBurgerBuilder}>\r\n            <li className={headerStyles.headerButton}>\r\n              <Link to='/' className={headerStyles.navlink}>\r\n                <div className={headerStyles.navButton}>\r\n                  <BurgerIcon type=\"primary\" />\r\n                  <span className={headerStyles.buttonCaption}>Конструктор</span>\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className={headerStyles.headerButton}>\r\n              <Link to='/feed' className={headerStyles.navlink}>\r\n                <div className={headerStyles.navButton + '  text_color_inactive'}>\r\n                  <ListIcon type=\"secondary\" />\r\n                  <span className={headerStyles.buttonCaption}>Лента заказов</span>\r\n                </div>\r\n              </Link>\r\n\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <Link to=\"/\">\r\n          <Logo />\r\n        </Link>\r\n\r\n        <nav className={headerStyles.userPanel + ' text text_type_main-default'}>\r\n          <Link className={headerStyles.authButton + ' ' + headerStyles.navlink + '  text_color_inactive'} to=\"/profile\">\r\n            <ProfileIcon type=\"secondary\" />\r\n            <span className={headerStyles.buttonCaption}>Личный кабинет</span>\r\n          </Link>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default AppHeader;\r\n","import React, { useEffect } from \"react\";\r\nimport cardStyles from \"./ingridient-card.module.css\";\r\nimport { CurrencyIcon, Counter } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useDrag, DragPreviewImage } from \"react-dnd\";\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { useAppSelector, useAppDispatch } from '../../services/hooks';\r\n\r\nimport {\r\n    OPEN_MODAL,\r\n    SET_MODAL_TYPE,\r\n    SET_INGRIDIENT_IN_MODAL,\r\n} from '../../services/actions/burgerVendor';\r\nimport { TIngredientObjData, TIngredientInStore, TDraggableIngr } from '../../utils/types';\r\n\r\ntype TIngridientCardProps = {\r\n    objIngridient: TIngredientObjData\r\n};\r\n\r\nconst IngridientCard: React.FC<TIngridientCardProps> = ({ objIngridient }) => {\r\n    const dispatch = useAppDispatch();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const [{ outline }, dragRef, dragPreviewImg] = useDrag({\r\n        type: 'ingridient',\r\n        item: objIngridient,\r\n\r\n        collect: (monitor) => ({\r\n            outline: monitor.isDragging() ? '1px solid #4C4CFF' : '',\r\n        }),\r\n    });\r\n\r\n    const openIngridientDetails = () => {\r\n        dispatch({\r\n            type: OPEN_MODAL,\r\n        });\r\n        dispatch({\r\n            type: SET_MODAL_TYPE,\r\n            value: 'IngridientDetails',\r\n        });\r\n        dispatch({\r\n            type: SET_INGRIDIENT_IN_MODAL,\r\n            value: objIngridient,\r\n        });\r\n    };\r\n\r\n    const handleClick = () => {\r\n        openIngridientDetails();\r\n\r\n        history.push({\r\n            pathname: `/ingredients/${objIngridient._id}`,\r\n            state: { ingredientModal: location },\r\n        });\r\n    };\r\n\r\n    const [ingrCounter, setIngrCounter] = React.useState<number>();\r\n\r\n    const bunInConstructor: TIngredientObjData | undefined = useAppSelector((state) => {\r\n        if (objIngridient.type === 'bun') {\r\n            return state.burgerVendor.bun ;\r\n        }\r\n        return undefined;\r\n    });\r\n\r\n    const draggableIngrInConstructor: TDraggableIngr[] | undefined = useAppSelector((state) => {\r\n        if (objIngridient.type === 'sauce' || objIngridient.type === 'main') {\r\n            return state.burgerVendor.draggableIngridients ;\r\n        }\r\n        return undefined;\r\n    });\r\n\r\n    function getNumOfIngridients(): number {\r\n        let counterValue = 0;\r\n\r\n        if (objIngridient.type === 'bun') {\r\n            if (bunInConstructor && (bunInConstructor._id === objIngridient._id) ) {\r\n                return 2;\r\n            }\r\n        }\r\n\r\n        if (draggableIngrInConstructor && (objIngridient.type === 'sauce' || objIngridient.type === 'main')) {\r\n            draggableIngrInConstructor.forEach((item: TIngredientInStore) => {\r\n                if (item._id === objIngridient._id) {\r\n                    counterValue++;\r\n                }\r\n            });\r\n        }\r\n\r\n        return counterValue;\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIngrCounter(getNumOfIngridients());\r\n        // eslint-disable-next-line\r\n    }, [bunInConstructor, draggableIngrInConstructor, objIngridient]);\r\n\r\n    return (\r\n        <>\r\n            <DragPreviewImage connect={dragPreviewImg} src={objIngridient.image} />\r\n            <div className={cardStyles.ingrCard + ' mb-8'} onClick={handleClick} ref={dragRef} style={{ outline }}>\r\n                <img src={objIngridient.image} alt={objIngridient.name} className={cardStyles.itemPic} />\r\n                <div className={cardStyles.price}>\r\n                    {!!ingrCounter && <Counter count={ingrCounter} size=\"default\" />}\r\n                    <span className=\"m-2 text_type_digits-default\">{objIngridient.price}</span>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n                <h3 className=\"m-1 text_type_main-default\">{objIngridient.name}</h3>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default IngridientCard;","import React from \"react\";\r\nimport IngridientCard from \"../ingridient-card/ingrdient-card\";\r\nimport { TIngredientObjData, TIngredientType } from '../../utils/types';\r\n\r\nimport { useAppSelector } from '../../services/hooks';\r\n\r\ntype TCardListProps = { type: TIngredientType };\r\n\r\nconst CardList: React.FC<TCardListProps> = ({ type }) => {\r\n\r\n    const arrOfIngridients = useAppSelector((store) => store.burgerVendor.ingridientsData.arrOfIngridients);\r\n\r\n    const arrTargetedIngridients = arrOfIngridients.filter(function (obj: TIngredientObjData) {\r\n        return obj.type === type;\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {\r\n                arrTargetedIngridients.map((obj: TIngredientObjData, index: number) => {\r\n                    return (\r\n                        <IngridientCard\r\n                            objIngridient={obj}\r\n                            key={obj._id}                            \r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React, { useRef } from \"react\";\r\nimport ingrStyles from \"./burger-ingredients.module.css\";\r\nimport CardList from \"../ingridients-cardlist/ingridients-cardlist\";\r\n\r\nimport {\r\n    Tab,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nimport { TIngredientType } from '../../utils/types';\r\n\r\nfunction BurgerIngredients() {\r\n    const [currentTab, setCurrentTab] = React.useState<string>(\"bun\");\r\n\r\n    const bunRef = useRef<HTMLDivElement>(null);\r\n    const sauceRef = useRef<HTMLDivElement>(null);\r\n    const mainRef = useRef<HTMLDivElement>(null);\r\n    const scrollContainerRef = useRef<HTMLDivElement>(null);\r\n\r\n    function scrollIntoRef(tabName: TIngredientType): void {\r\n\r\n        let currentTab;\r\n\r\n        if (tabName === 'bun') {\r\n            currentTab = bunRef;\r\n        }\r\n        else if (tabName === 'sauce') {\r\n            currentTab = sauceRef;\r\n        }\r\n        else if (tabName === 'main') {\r\n            currentTab = mainRef\r\n        }\r\n\r\n        currentTab && currentTab.current && currentTab.current.scrollIntoView({ block: \"start\", behavior: \"smooth\" });\r\n\r\n    }\r\n\r\n    const handleTabClick = (value: string): void => {\r\n        setCurrentTab(value);\r\n        scrollIntoRef(value as TIngredientType);\r\n    };\r\n\r\n    const handleScroll = () => {\r\n\r\n        const scrollContainerPosition = scrollContainerRef.current ? scrollContainerRef.current.getBoundingClientRect().top : 0;\r\n        const bunHeaderPosition = bunRef.current ? bunRef.current.getBoundingClientRect().top : 0;\r\n        const sauceHeaderPosition = sauceRef.current ? sauceRef.current.getBoundingClientRect().top : 0;\r\n        const mainHeaderPosition = mainRef.current ? mainRef.current.getBoundingClientRect().top : 0;\r\n        const bunDiff = Math.abs(scrollContainerPosition - bunHeaderPosition);\r\n        const sauceDiff = Math.abs(scrollContainerPosition - sauceHeaderPosition);\r\n        const mainDiff = Math.abs(scrollContainerPosition - mainHeaderPosition);\r\n\r\n        if (bunDiff < sauceDiff) {\r\n            setCurrentTab(\"bun\");\r\n        } else if (sauceDiff < mainDiff) {\r\n            setCurrentTab(\"sauce\");\r\n        } else {\r\n            setCurrentTab(\"main\");\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <section className={ingrStyles.ingridiensContainer}>\r\n            <div className={ingrStyles.tabs}>\r\n                <Tab value=\"bun\" active={currentTab === 'bun'} onClick={handleTabClick}>Булки</Tab>\r\n                <Tab value=\"sauce\" active={currentTab === 'sauce'} onClick={handleTabClick}>Соусы</Tab>\r\n                <Tab value=\"main\" active={currentTab === 'main'} onClick={handleTabClick}>Начинки</Tab>\r\n            </div>\r\n\r\n            <div className={ingrStyles.ingrDisplay + ' mt-10'} ref={scrollContainerRef} onScroll={handleScroll}>\r\n\r\n                <div className={ingrStyles.ingrShowcase} ref={bunRef}>\r\n                    <h3 className=\"text text_type_main-medium\">Булки</h3>\r\n                    <div className={ingrStyles.ingrList}>\r\n                        <CardList type={\"bun\"} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={ingrStyles.ingrShowcase} ref={sauceRef}>\r\n                    <h3 className=\"text text_type_main-medium\">Соусы</h3>\r\n                    <div className={ingrStyles.ingrList}>\r\n                        <CardList type={\"sauce\"} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={ingrStyles.ingrShowcase} ref={mainRef}>\r\n                    <h3 className=\"text text_type_main-medium\">Начинки</h3>\r\n                    <div className={ingrStyles.ingrList}>\r\n                        <CardList type={\"main\"} />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default BurgerIngredients;","import React from \"react\";\r\nimport diStyles from \"./draggable-item.module.css\";\r\nimport { useAppSelector, useAppDispatch } from '../../services/hooks';\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport {\r\n    UPDATE_DRAGGABLE_INGRIDIENTS,\r\n} from '../../services/actions/burgerVendor';\r\nimport {\r\n    ConstructorElement,\r\n    DragIcon\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nimport { TIngredientObjData, TFindIngredientInStore, TResortIngrList } from '../../utils/types';\r\n\r\n\r\ntype TDraggableItemProps = {\r\n    ingrInstanceID: number,\r\n    ingrData: TIngredientObjData,\r\n    ingrIndexInStoreArr: number,\r\n    resortIngrList: TResortIngrList,\r\n    findIngridient: TFindIngredientInStore,\r\n}\r\n\r\nconst DraggableItem: React.FC<TDraggableItemProps> = ({ ingrInstanceID, ingrData, ingrIndexInStoreArr, resortIngrList, findIngridient }) => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const stateDraggableIngridients = useAppSelector((store) => store.burgerVendor.draggableIngridients);\r\n\r\n    const deleteThisIngridient = () => {\r\n        const arrOfIngrObjects = stateDraggableIngridients.slice(0);\r\n\r\n        arrOfIngrObjects.splice(ingrIndexInStoreArr, 1);\r\n\r\n        dispatch({\r\n            type: UPDATE_DRAGGABLE_INGRIDIENTS,\r\n            value: arrOfIngrObjects,\r\n        });\r\n    }\r\n\r\n    const [{ isDragging }, dragItem, draggedPreview] = useDrag(\r\n        () => ({\r\n            type: \"draggableIngridient\",\r\n            item: { ingrInstanceID, ingrIndexInStoreArr },\r\n            collect: (monitor) => ({\r\n                isDragging: monitor.isDragging(),\r\n            }),\r\n            end: (item, monitor) => {\r\n                const didDrop = monitor.didDrop();\r\n                if (!didDrop) {\r\n                    resortIngrList(item.ingrInstanceID, item.ingrIndexInStoreArr);\r\n                }\r\n            },\r\n        }),\r\n        [ingrInstanceID, ingrIndexInStoreArr, resortIngrList]\r\n    );\r\n\r\n    const [, targetOfDrop] = useDrop(\r\n        // @ts-ignore\r\n        () => ({\r\n            accept: \"draggableIngridient\",\r\n            canDrop: () => false,\r\n            hover({ ingrInstanceID: draggedInstanceId }) {\r\n                if (draggedInstanceId !== ingrInstanceID) {\r\n                    const { ingrIndexInStore: droppedIndexInStore } = findIngridient(ingrInstanceID);\r\n                    resortIngrList(draggedInstanceId, droppedIndexInStore);\r\n                }\r\n            },\r\n        }),\r\n        [findIngridient, resortIngrList]\r\n    );\r\n\r\n    const opacity = isDragging ? 0 : 1;\r\n\r\n    return (\r\n\r\n        <div className={diStyles.draggableItime} ref={(node) => targetOfDrop(draggedPreview(node))} style={{ opacity }}>\r\n            <button ref={dragItem} className={diStyles.draggableButton}>\r\n                <DragIcon type=\"primary\" />\r\n            </button>\r\n            <ConstructorElement text={ingrData.name} thumbnail={ingrData.image} price={ingrData.price} handleClose={deleteThisIngridient} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DraggableItem;","import s from './loader.module.css';\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div className={s.loader}/>\r\n  )\r\n}","import { format, differenceInDays, formatDistance } from \"date-fns\";\r\nimport { ru } from \"date-fns/locale\";\r\nimport { TIngredientObjData, TOrder } from './types';\r\n\r\nexport const getInstanceID = () => {return (new Date()).getTime()};\r\n\r\nexport const getFormattedDate = (data: string) => {\r\n  const currentDate = new Date();\r\n  const pastDate = new Date(data);\r\n\r\n  const formatedTime =\r\n    format(pastDate, 'HH:mm ') + 'i-' + format(pastDate, 'O');\r\n\r\n  const diffDays = differenceInDays(currentDate.getTime(), pastDate.getTime());\r\n\r\n  let calendarDate = '';\r\n  if (diffDays === 0) {\r\n    calendarDate = 'Сегодня';\r\n  } else if (diffDays === 1) {\r\n    calendarDate = 'Вчера';\r\n  } else if (diffDays < 5) {\r\n    calendarDate = `${diffDays} дня назад`;\r\n  } else if (diffDays < 20) {\r\n    calendarDate = `${diffDays} дней назад`;\r\n  } else {\r\n    calendarDate = `${formatDistance(new Date(pastDate), Date.now(), { locale: ru })} назад`;\r\n  }\r\n\r\n  const res = `${calendarDate}, ${formatedTime}`;\r\n  return res;\r\n};\r\n\r\nexport const getOrderStatus = (orderStatus: string): string => {\r\n  switch (orderStatus) {\r\n    case ('done'): {\r\n      return 'Выполнен';\r\n    }\r\n    case ('pending'): {\r\n      return 'Готовится';\r\n    }\r\n    default: return 'Отменён'\r\n  }\r\n}\r\n\r\nexport const getPrice = (arr: Array<TIngredientObjData>) => {\r\n  return arr.reduce((previousValue: number, currentValue: TIngredientObjData) => {\r\n    return previousValue + currentValue.price;\r\n  }, 0);\r\n}\r\n\r\nexport const getCompletedIngrList = (orderData: TOrder, allIngrCatalog: Array<TIngredientObjData>): Array<TIngredientObjData> => {\r\n  const completedIngrList: Array<TIngredientObjData> = [];\r\n\r\n\r\n  for (const ingrId of orderData.ingredients) {\r\n    allIngrCatalog.forEach((ingrObj) => {\r\n      if (ingrObj._id === ingrId) {\r\n        completedIngrList.push(ingrObj)\r\n      }\r\n    })\r\n  }\r\n\r\n  return completedIngrList;\r\n}","/* eslint-disable */\r\nimport React, { useState } from \"react\";\r\nimport { useCallback } from \"react\";\r\nimport s from \"./burger-constructor.module.css\";\r\nimport DraggableItem from \"../draggable-item/draggable-item\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport { useAppSelector, useAppDispatch } from '../../services/hooks';\r\nimport { Loader } from \"../loader/loader\";\r\nimport { getInstanceID } from '../../utils/utils';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TIngredientType, TIngredientObjData, TIngredientInStore, TFindIngredientInStore, TResortIngrList, TDraggableIngr } from '../../utils/types';\r\n\r\nimport {\r\n  postBurgerOrderThunk,\r\n  ADD_BUN,\r\n  ADD_SAUCE,\r\n  ADD_MAIN,\r\n  RESORT_DRAGGABLE_INGRIDIENTS,\r\n} from '../../services/actions/burgerVendor';\r\n\r\nimport {\r\n  ConstructorElement,\r\n  Button,\r\n  CurrencyIcon,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nimport { urlApiPostOrder } from '../../utils/api-url';\r\n\r\nfunction BurgerConstructor() {\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n\r\n  const { chosenBun, chosenDraggableIngr, isLoggedIn, loaderIsVisible  } = useAppSelector((store) => ({\r\n    chosenBun: store.burgerVendor.bun,\r\n    chosenDraggableIngr: store.burgerVendor.draggableIngridients,\r\n    isLoggedIn: store.user.isLoggedIn,\r\n    loaderIsVisible: store.burgerVendor.constructorLoaderIsVisible,\r\n  }));\r\n\r\n  function onDropHandler(objIngridient: TIngredientObjData) {\r\n    addIngridientInConstructor(objIngridient);\r\n  }\r\n\r\n  type TGetActionResponse = 'ADD_BUN' | 'ADD_SAUCE' | 'ADD_MAIN' | 'error';\r\n\r\n  const getAction = (typeOfIngridient: TIngredientType): TGetActionResponse => {\r\n    if (typeOfIngridient === 'bun') {\r\n      return ADD_BUN;\r\n    }\r\n\r\n    if (typeOfIngridient === 'sauce') {\r\n      return ADD_SAUCE;\r\n    }\r\n\r\n    if (typeOfIngridient === 'main') {\r\n      return ADD_MAIN;\r\n    }\r\n\r\n    return 'error';\r\n  };\r\n\r\n  const addIngridientInConstructor = (objIngridient: TIngredientObjData) => {\r\n\r\n    const objIngridientWithId: TDraggableIngr = { ...objIngridient, instanceID: getInstanceID() };\r\n\r\n    dispatch({\r\n      type: getAction(objIngridient.type),\r\n      value: objIngridientWithId,\r\n    })\r\n  };\r\n\r\n  const [{ background }, dropTarget] = useDrop({\r\n    accept: \"ingridient\",\r\n    drop(objIngridient: TIngredientObjData) {\r\n      onDropHandler(objIngridient);\r\n    },\r\n    collect: monitor => ({\r\n      background: monitor.isOver() ? 'radial-gradient(circle, rgba(63,94,251,0.6110819327731092) 0%, rgba(252,70,107,0) 44%)' : '',\r\n    }),\r\n  });\r\n\r\n\r\n  const findIngridientInStore = useCallback<TFindIngredientInStore>(\r\n    (targetIngrID) => {\r\n      const objIngrData = chosenDraggableIngr.filter((objIngr: TIngredientInStore) => objIngr.instanceID === targetIngrID)[0];\r\n      return {\r\n        objIngrData,\r\n        ingrIndexInStore: chosenDraggableIngr.indexOf(objIngrData),\r\n      };\r\n    },\r\n    [chosenDraggableIngr]\r\n  );\r\n\r\n  const resortIngrList: TResortIngrList =\r\n    (draggedInstanceId: number, droppedIndexInStore: number) => {\r\n      const { ingrIndexInStore } = findIngridientInStore(draggedInstanceId);\r\n\r\n      dispatch({\r\n        type: RESORT_DRAGGABLE_INGRIDIENTS,\r\n        indexOfDraggedIngr: ingrIndexInStore,\r\n        indexOfDroppedIngr: droppedIndexInStore,\r\n      });\r\n    };\r\n\r\n  const [, dropResort] = useDrop(() => ({ accept: \"draggableIngridient\" }));\r\n\r\n  function getTotalPrice(): number {\r\n    const priceOfBun = chosenBun.price * 2;\r\n    let priceOfDraggableIngr = 0;\r\n\r\n    if (chosenDraggableIngr.length > 0) {\r\n      priceOfDraggableIngr = chosenDraggableIngr.reduce(function (summ: number, ingridient: TIngredientInStore) {\r\n        return summ + Number(ingridient.price);\r\n      }, 0);\r\n    }\r\n\r\n    return priceOfBun + priceOfDraggableIngr;\r\n  }\r\n\r\n  function createPostBody() {\r\n    const arrWithOrderData = [];\r\n\r\n    arrWithOrderData.push(chosenBun[\"_id\"]);\r\n\r\n    chosenDraggableIngr.forEach((obj: TIngredientInStore) => {\r\n      arrWithOrderData.push(obj[\"_id\"]);\r\n    });\r\n\r\n    return { \"ingredients\": arrWithOrderData };\r\n  }\r\n\r\n  const sendOrderToApi = async () => {\r\n    if (!isLoggedIn) {\r\n      return (history.push({ pathname: '/login' }));\r\n    }\r\n\r\n    return dispatch(postBurgerOrderThunk(urlApiPostOrder, createPostBody));\r\n  };\r\n\r\n  return (\r\n    <section className={s.container} ref={dropTarget} style={{ background }}>\r\n      { loaderIsVisible ? <div className={s.loader}><Loader /></div> : null}\r\n\r\n\r\n      <ul className={s.chosenIngridients + ' mb-6'}>\r\n        {(chosenBun.name) &&\r\n          (\r\n            <li className={s.topIngridinet}>\r\n              <ConstructorElement type=\"top\" isLocked={true} text={chosenBun.name + \" (верх)\"} thumbnail={chosenBun.image} price={chosenBun.price} />\r\n            </li>\r\n          )\r\n        }\r\n\r\n        {(chosenDraggableIngr.length > 0) &&\r\n          (\r\n            <li className={s.draggableIngridinetContainer} ref={dropResort}>\r\n              {chosenDraggableIngr.map((ingr: TIngredientInStore, index: number) => {\r\n                return (\r\n                  <DraggableItem\r\n                    key={ingr.instanceID}\r\n                    ingrInstanceID={ingr.instanceID}\r\n                    ingrData={ingr}\r\n                    ingrIndexInStoreArr={index}\r\n                    resortIngrList={resortIngrList}\r\n                    findIngridient={findIngridientInStore}\r\n                  />\r\n                )\r\n              })\r\n              }\r\n            </li>\r\n          )\r\n        }\r\n\r\n        {(chosenBun.name) &&\r\n          (\r\n            <li className={s.bottomIngridinet}>\r\n              <ConstructorElement type=\"bottom\" isLocked={true} text={chosenBun.name + \" (низ)\"} thumbnail={chosenBun.image} price={chosenBun.price} />\r\n            </li>\r\n          )\r\n        }\r\n\r\n      </ul>\r\n\r\n      <div className={s.totalBar}>\r\n        {(chosenBun.name) &&\r\n          (\r\n            <>\r\n              <span className={'text text_type_digits-medium mr-10'}>{getTotalPrice()}<CurrencyIcon type={'primary'} /></span>\r\n              <Button type=\"primary\" size=\"large\" onClick={sendOrderToApi}>Оформить заказ</Button>\r\n            </>\r\n          )\r\n          ||\r\n          (\r\n            <div style={{ margin: '0 auto' }}>\r\n              {(!chosenBun.name) && (chosenDraggableIngr.length < 1) &&\r\n                (\r\n                  <span className={'text text_type_main-medium mr-10'} style={{ textAlign: 'center', justifyContent: 'center', display: 'table-cell', paddingRight: '40px' }}>{/* TODO: вынести стили в module.css */}\r\n                    Перетащите сюда ингридиенты, <br></br>которые хотите добавить в бургер\r\n                  </span>\r\n                )\r\n                ||\r\n                (\r\n                  <span className={'text text_type_main-medium mr-10'} style={{}}>\r\n                    Выберите булку для бургера\r\n                  </span>\r\n                )\r\n              }\r\n            </div>\r\n          )\r\n        }\r\n\r\n      </div>\r\n\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default BurgerConstructor;","import { FC } from 'react';\r\nimport stylesOD from './order-details.module.css';\r\nimport { useAppSelector } from '../../services/hooks';\r\n\r\n\r\nconst OrderDetais: FC = () => {\r\n    const orderState = useAppSelector((store) => store.burgerVendor.orderData);\r\n\r\n    return (\r\n        <>\r\n            <h2 className={'text text_type_digits-large mt-30 mb-2'}>{orderState.order.number}</h2>\r\n            <p className={'text text_type_main-medium mb-15'}>идентификатор заказа</p>\r\n            <div className={stylesOD.bgForCheck + ' mb-15'}/>\r\n            <p className={\"text text_type_main-default mb-2\"}>Ваш заказ начали готовить</p>\r\n            <p className={\"text text_type_main-default text_color_inactive mb-30\"}>Дождитесь готовности на орбитальной станции</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderDetais;","import s from './burger-vendor.module.css';\r\nimport BurgerIngredients from '../burger-ingredients/burger-ingredients';\r\nimport BurgerConstructor from '../burger-constructor/burger-constructor';\r\nimport Modal from '../modal/modal';\r\nimport OrderDetails from '../order-details/order-details';\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport { useAppSelector } from '../../services/hooks';\r\nimport {FC} from \"react\";\r\n\r\ninterface IModalProps {\r\n  handleClose: () => void;\r\n}\r\n\r\nconst BurgerVendor: FC<IModalProps> = ({  handleClose }) => {\r\n\r\n  const { modalIsVisible, currentModalType, arrOfIngridients, dataIsLoading, dataHasError } = useAppSelector((store) => ({\r\n    modalIsVisible: store.burgerVendor.modalIsVisible,\r\n    currentModalType: store.burgerVendor.currentModalType,\r\n    ingrInModalData: store.burgerVendor.ingrInModalData,\r\n    arrOfIngridients: store.burgerVendor.ingridientsData.arrOfIngridients,\r\n    dataIsLoading: store.burgerVendor.ingridientsData.ingrDataIsLoading,\r\n    dataHasError: store.burgerVendor.ingridientsData.ingrDataHasError,\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      <section className={s.headerSection}>\r\n        <h1 className=\"text text_type_main-large\">Соберите бургер</h1>\r\n      </section>\r\n\r\n      <section className={s.constructorContainer}>\r\n        {!dataIsLoading && !dataHasError && !!arrOfIngridients && !!arrOfIngridients.length && (\r\n          <>\r\n            <DndProvider backend={HTML5Backend}>\r\n              <BurgerIngredients />\r\n              <BurgerConstructor />\r\n            </DndProvider>\r\n\r\n            {modalIsVisible && (currentModalType === 'OrderDetails') &&\r\n                <Modal handleClose={handleClose}>\r\n                  <OrderDetails />\r\n                </Modal>\r\n            }\r\n          </>\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BurgerVendor;","import s from './feed-detailed-card.module.css';\r\nimport { useAppSelector } from '../../services/hooks';\r\nimport { getOrderStatus, getPrice, getCompletedIngrList, getFormattedDate } from '../../utils/utils';\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { TIngredientObjData, } from '../../utils/types';\r\n\r\n\r\n\r\n\r\nexport const FeedDetailedCard = () => {\r\n  const orderData = useAppSelector(store => store.ws.detailedOrder);\r\n  const allIngrCatalog = useAppSelector((state) => state.burgerVendor.ingridientsData.arrOfIngridients);\r\n\r\n  let arrOfUsedIngr: null | Array<TIngredientObjData> = null;\r\n  let bunItem: null | TIngredientObjData = null;\r\n  let restIngr: null | Array<TIngredientObjData> = null;\r\n\r\n  if (allIngrCatalog && orderData) {\r\n    \r\n    arrOfUsedIngr = allIngrCatalog.filter((ingr: TIngredientObjData) => orderData.ingredients.includes(ingr._id));\r\n\r\n    restIngr = allIngrCatalog.filter((ingr: TIngredientObjData) => orderData.ingredients.includes(ingr._id));\r\n\r\n\r\n    bunItem = restIngr[0];\r\n    restIngr = restIngr.slice(1,);\r\n\r\n  }\r\n\r\n  const getIcon = (url: string) => {\r\n    return (<div className={s.imgContainer} style={{backgroundImage: `url(${url})`}}/>)\r\n  }\r\n\r\n  const getListItem = (ingrObj: TIngredientObjData | null, amount: number = 1, index: number) => {\r\n\r\n    return (\r\n      ingrObj ?\r\n        (\r\n          <li className={s.ingrItem} key={index}>\r\n            <div className={s.ingrIdent}>\r\n              {getIcon(ingrObj.image_mobile)}\r\n              <span className={' text text_type_main-default'}>{ingrObj.name}</span>\r\n            </div>\r\n            <div className={s.priceContainer}>\r\n              <span className={s.ingrPrice + ' text text_type_digits-default'}>{amount} x {ingrObj.price}</span>\r\n              <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n          </li>\r\n        )\r\n        :\r\n        null\r\n    )\r\n  }\r\n\r\n  return (\r\n    <article className={s.main}>\r\n      <span className={s.number + ' text text_type_digits-default mb-10'}> {orderData.number} </span>\r\n      <h4 className={s.header + ' text text_type_main-medium mb-2'}> {orderData.name} </h4>\r\n      <span className={s.status + ' text text_type_main-default mb-15'}>{getOrderStatus(orderData.status)}</span>\r\n\r\n      <h5 className={s + ' text text_type_main-medium mb-6'}>Состав:</h5>\r\n\r\n      <ul className={s.ingrList}>\r\n        {bunItem ? getListItem(bunItem, 2, 999) : null}\r\n        {restIngr ? restIngr.map( (ingr, index) => getListItem(ingr, 1, index)) : null}\r\n      </ul>\r\n\r\n      <div className={s.plane}>\r\n        <span className={' text text_type_main-default text_color_inactive'}>{getFormattedDate(orderData.createdAt)}</span>\r\n\r\n        <div className={s.price}><span className={' text text_type_digits-default mr-2'}>\r\n          { arrOfUsedIngr ? ( getPrice(getCompletedIngrList(orderData, allIngrCatalog)) ) : null}\r\n          </span><CurrencyIcon type=\"primary\" /></div>\r\n      </div>\r\n    </article>\r\n  )\r\n}","import React, { useCallback, useEffect, useState } from 'react';\r\nimport styles from './auth-form.module.css';\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport { logInAppThunk, confirmAuthThunk } from '../services/actions/userActions';\r\n\r\nimport { useAppDispatch, useAppSelector } from '../services/hooks';\r\n\r\nimport {\r\n  Input,\r\n  PasswordInput,\r\n  Button,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nexport function LoginPage() {\r\n  const [form, setFormValues] = useState({ email: '', password: '' });\r\n  const { isLoggedIn } = useAppSelector((store) => store.user);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const location = useLocation<{ from: Location }>();\r\n\r\n  useEffect(() => {\r\n    dispatch(confirmAuthThunk());\r\n  }, [dispatch]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormValues({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = useCallback(\r\n    e => { \r\n      e.preventDefault();\r\n      dispatch(logInAppThunk(form));\r\n    },\r\n    [form, dispatch]\r\n  );\r\n\r\n  if (isLoggedIn) {\r\n    return (<Redirect to={ location.state?.from || '/'} />);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrap}>\r\n      <form className={'auth-form ' + styles.form} onSubmit={handleSubmit}>\r\n        <h1 className='text text_type_main-medium mb-6'>Вход</h1>\r\n\r\n        <Input\r\n          type='email'\r\n          placeholder='E-mail'\r\n          value={form.email}\r\n          name={'email'}\r\n          onChange={handleChange}\r\n\r\n          error={false}\r\n          errorText={'Введите корректный e-mail'}\r\n        />\r\n\r\n        <PasswordInput\r\n          value={form.password}\r\n          name={'password'}\r\n          size={'default'}\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Войти\r\n        </Button>\r\n\r\n        <p className=\"text text_type_main-default text_color_inactive\">\r\n          Вы — новый пользователь?{\" \"}\r\n          <Link to={\"/registration\"} className={\"text_color_link\"}>\r\n            Зарегистрироваться\r\n          </Link>\r\n        </p>\r\n        <p className=\"text text_type_main-default text_color_inactive\">\r\n          Забыли пароль?{\" \"}\r\n          <Link to={\"/forgot-password\"} className={\"text_color_link\"}>\r\n            Восстановить пароль\r\n          </Link>\r\n        </p>\r\n\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useCallback, useState, useEffect } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../services/hooks';\r\nimport styles from './auth-form.module.css';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { confirmAuthThunk, registerNewUserThunk } from '../services/actions/userActions';\r\n\r\nimport {\r\n  Input,\r\n  PasswordInput,\r\n  Button,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nexport function RegistrationPage() {\r\n  const [form, setFormValues] = useState({ email: '', name: '', password: '' });\r\n  const { isLoggedIn } = useAppSelector((store) => store.user);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(confirmAuthThunk());\r\n  }, [dispatch]);\r\n\r\n   useEffect(() => {\r\n    setFormValues(\r\n      { email: 'oladuwki@yandex.ru', name: 'Oladuwki', password: '123123' }\r\n    );\r\n  }, [isLoggedIn]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormValues({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n      dispatch(registerNewUserThunk(form));\r\n    }, [dispatch, form]\r\n  );\r\n\r\n  if (isLoggedIn) {\r\n    return (<Redirect to={{ pathname: '/' }} />);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrap}>\r\n      <form className={'auth-form ' + styles.form} onSubmit={handleSubmit}>\r\n        <h1 className='text text_type_main-medium mb-6'>Регистрация</h1>\r\n\r\n        <Input\r\n          type='text'\r\n          placeholder='Имя'\r\n          value={form.name}\r\n          name={'name'}\r\n          onChange={handleChange}\r\n\r\n          error={false}\r\n          errorText={'Имя должно состоять из символов галактического алфавита'}\r\n        />\r\n\r\n        <Input\r\n          type='email'\r\n          placeholder='E-mail'\r\n          value={form.email}\r\n          name={'email'}\r\n          onChange={handleChange}\r\n\r\n          error={false}\r\n          errorText={'Введите корректный e-mail'}\r\n        />\r\n\r\n        <PasswordInput\r\n          value={form.password}\r\n          name={'password'}\r\n          size={'default'}\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Зарегистрироваться\r\n        </Button>\r\n\r\n        <p className=\"text text_type_main-default text_color_inactive\">\r\n          Уже зарегистрированы?{\" \"}\r\n          <Link to={\"/login\"} className={\"text_color_link\"}>\r\n            Войти\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n}","import React, { useCallback, useState, useEffect } from 'react';\r\nimport styles from './auth-form.module.css';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\r\nimport { confirmAuthThunk, requestResetCodeThunk, } from '../services/actions/userActions';\r\nimport {\r\n  Input,\r\n  Button,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\n\r\nexport function ForgotPage() {\r\n  const [form, setFormValues] = useState({ email: '' });\r\n  const { isLoggedIn, canResetPassword } = useAppSelector((store) => store.user);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    setFormValues(\r\n      { email: 'shamko.e.v@yandex.ru' }\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(confirmAuthThunk());\r\n  }, [dispatch]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormValues({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n\r\n      dispatch(requestResetCodeThunk(form.email));\r\n\r\n    }, [dispatch, form]\r\n  );\r\n\r\n  if (isLoggedIn) {\r\n    return (<Redirect to={{ pathname: '/' }} />);\r\n  }\r\n\r\n  if (!isLoggedIn && canResetPassword) {\r\n    return (<Redirect to={{ pathname: '/reset-password' }} />);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrap}>\r\n      <form className={'auth-form ' + styles.form} onSubmit={handleSubmit}>\r\n        <h1 className='text text_type_main-medium mb-6'>Восстановление пароля</h1>\r\n\r\n        <Input\r\n          type='text'\r\n          placeholder='Укажите e-mail'\r\n          value={form.email}\r\n          name={'email'}\r\n          onChange={handleChange}\r\n\r\n          error={false}\r\n          errorText={'Введите корректный e-mail'}\r\n        />\r\n\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Восстановить\r\n        </Button>\r\n\r\n        <p className=\"text text_type_main-default text_color_inactive\">\r\n          Вспомнили пароль?{\" \"}\r\n          <Link to={\"/login\"} className={\"text_color_link\"}>\r\n            Войти\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n}","import React, { useCallback, useState } from 'react';\r\nimport styles from './auth-form.module.css';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\r\nimport { getCookie } from '../utils/cookie';\r\nimport { setNewPasswordThunk } from '../services/actions/userActions';\r\n\r\nimport {\r\n  Input,\r\n  PasswordInput,\r\n  Button,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nexport function ResetPassword() {\r\n  const [form, setFormValues] = useState({ password: '', resetCode: '' });\r\n  const { isLoggedIn, canResetPassword, hasResetPassword } = useAppSelector((store) => store.user);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormValues({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n      const newPassword = form.password;\r\n      const resetCode = form['resetCode'];\r\n\r\n      console.log('newPassword', newPassword);\r\n      console.log('resetCode', resetCode);\r\n\r\n      dispatch(setNewPasswordThunk(newPassword, resetCode));\r\n\r\n      setFormValues({ ...form, password: '' });\r\n    }, [dispatch, form]\r\n  );\r\n\r\n  if (isLoggedIn) {\r\n    return (<Redirect to={{ pathname: '/' }} />);\r\n  }\r\n\r\n  if (hasResetPassword) {\r\n    console.log('has reset password');\r\n    return (<Redirect to={{ pathname: '/login' }} />);\r\n  }\r\n\r\n  if (!canResetPassword && (getCookie('canResetPassword') !== 'yes')) {\r\n    return (<Redirect to={{ pathname: '/forgot-password' }} />);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrap}>\r\n      <form className={'auth-form ' + styles.form} onSubmit={handleSubmit}>\r\n        <h1 className='text text_type_main-medium mb-6'>Восстановление пароля</h1>\r\n\r\n        <PasswordInput\r\n          value={form.password}\r\n          name={'password'}\r\n          size={'default'}\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <Input\r\n          type='text'\r\n          placeholder='Введите код из письма'\r\n          value={form.resetCode}\r\n          name={'resetCode'}\r\n          onChange={handleChange}\r\n\r\n          error={false}\r\n          errorText={''}\r\n        />\r\n\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Восстановить\r\n        </Button>\r\n\r\n        <p className=\"text text_type_main-default text_color_inactive\">\r\n          Вспомнили пароль?{\" \"}\r\n          <Link to={\"/login\"} className={\"text_color_link\"}>\r\n            Войти\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n}","import React, { FC } from 'react';\r\nimport styles from './profile-tab.module.css';\r\nimport { TProfileMenuTabsValue } from '../../utils/types';\r\n\r\ntype TProfileTabProps = {\r\n  value: TProfileMenuTabsValue,\r\n  isActive: boolean,\r\n  onClick: (tabName: TProfileMenuTabsValue) => void,\r\n};\r\n\r\nexport const ProfileTab: FC<TProfileTabProps> = ({ children, value, isActive, onClick: handleClick}) => { \r\n  const className = `${styles.tab} ${isActive ? styles.tab_type_current : ''}`;\r\n\r\n  const onClick = React.useCallback(() => {\r\n    if (typeof handleClick === 'function' && !isActive ) {\r\n      handleClick(value);\r\n    }\r\n  }, [handleClick, value, isActive]);\r\n\r\n  return (\r\n    <div className={`${className} pt-4 pr-10 pb-4 noselect`} onClick={onClick}>\r\n      <span className=\"text text_type_main-medium\">{children}</span>\r\n    </div>\r\n  );\r\n};","import { useState, FC } from 'react';\r\nimport styles from './profile-menu.module.css';\r\nimport { ProfileTab } from '../profile-tab/profile-tab';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { logOutThunk } from '../../services/actions/userActions';\r\nimport { TProfileMenuTabsValue } from '../../utils/types';\r\n\r\nimport { useAppDispatch } from '../../services/hooks';\r\n\r\ntype TProfileMenuProps = { activeTab: TProfileMenuTabsValue };\r\n\r\nexport const ProfileMenu: FC<TProfileMenuProps> = ({ activeTab }) => {\r\n  const [currentTab] = useState(activeTab);\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleTabClick = (value: TProfileMenuTabsValue) => {\r\n    if (value === 'profile') {\r\n      history.replace({ pathname: '/profile' });\r\n    }\r\n\r\n    if (value === 'orderHistory') {\r\n      history.replace({ pathname: '/profile/orders' });\r\n    }\r\n\r\n    if (value === 'logOut') {\r\n      dispatch(logOutThunk());\r\n    }\r\n  }\r\n\r\n  return (\r\n    <nav className={styles.menu}>\r\n      <ProfileTab value=\"profile\" isActive={currentTab === 'profile'} onClick={handleTabClick}>Профиль</ProfileTab>\r\n      <ProfileTab value=\"orderHistory\" isActive={currentTab === 'orderHistory'} onClick={handleTabClick}>История заказов</ProfileTab>\r\n      <ProfileTab value=\"logOut\" isActive={false} onClick={handleTabClick}>Выход</ProfileTab>\r\n\r\n      <p className=\"text text_type_main-default text_color_inactive mt-20\">В этом разделе вы можете изменить свои персональные данные</p>\r\n    </nav>\r\n  );\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\r\nimport { confirmAuthThunk, patchUserDataThunk } from '../services/actions/userActions';\r\nimport styles from './profile.module.css';\r\nimport { ProfileMenu } from '../components/profile-menu/profile-menu';\r\n\r\nimport {\r\n  Input,\r\n  Button,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nexport function ProfilePage() {\r\n  const [form, setFormValues] = useState({ name: '', email: '', password: '' });\r\n  const { userName, userEmail } = useAppSelector((state) => state.user);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(confirmAuthThunk());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setFormValues({ ...form, name: userName, email: userEmail })\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormValues({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(patchUserDataThunk(form, setFormValues));\r\n  }\r\n  \r\n  const handleCansel = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.preventDefault();\r\n    setFormValues({ name: userName, email: userEmail, password: '' });\r\n  }\r\n\r\n  return (\r\n    <section className={styles.wrap}>\r\n      <ProfileMenu activeTab={'profile'} />\r\n      <form className={styles.profileInfo + \" profile-inputs\"} onSubmit={handleSubmit}>\r\n        <Input\r\n          type={\"text\"}\r\n          name={\"name\"}\r\n          placeholder={\"Имя\"}\r\n          value={form.name}\r\n          onChange={handleChange}\r\n          icon={\"EditIcon\"}\r\n          error={false}\r\n        />\r\n\r\n        <Input\r\n          type={\"text\"}\r\n          name={\"email\"}\r\n          placeholder={\"e-mail\"}\r\n          value={form.email}\r\n          onChange={handleChange}\r\n          icon={\"EditIcon\"}\r\n          error={false}\r\n        />\r\n\r\n        <Input\r\n          type={\"text\"}\r\n          name={'password'}\r\n          placeholder={\"Пароль\"}\r\n          value={form.password}\r\n          onChange={handleChange}\r\n          size={'default'}\r\n          icon={\"EditIcon\"}\r\n          error={false}\r\n        />\r\n        <div className={styles.buttonWrap}>\r\n          <Button >Сохранить</Button>\r\n          <Button onClick={handleCansel as () => void} type=\"secondary\">Отмена</Button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n","import { TOrder } from '../../utils/types';\r\nimport { TOrdersStoreData } from '../reducers/wsReducer';\r\n\r\nexport const WS_OPEN_CONNECTION: 'WS_OPEN_CONNECTION' = 'WS_OPEN_CONNECTION';\r\nexport const WS_CONNECTED_SUCCESSFULLY: 'WS_CONNECTED_SUCCESSFULLY' = 'WS_CONNECTED_SUCCESSFULLY';\r\nexport const WS_ERROR: 'WS_ERROR' = 'WS_ERROR';\r\nexport const WS_GOT_ORDERS: 'WS_GOT_ORDERS' = 'WS_GOT_ORDERS';\r\nexport const WS_SEND_MESSAGE: 'WS_SEND_MESSAGE' = 'WS_SEND_MESSAGE';\r\nexport const WS_CLOSE_CONNECTION: 'WS_CLOSE_CONNECTION' = 'WS_CLOSE_CONNECTION';\r\nexport const WS_DISCONNECTED: 'WS_DISCONNECTED' = 'WS_DISCONNECTED';\r\nexport const SET_DETAILED_ORDER_IN_MODAL: 'SET_DETAILED_ORDER_IN_MODAL' = 'SET_DETAILED_ORDER_IN_MODAL';\r\n\r\nexport const wsActions = {\r\n  openConnection: WS_OPEN_CONNECTION,\r\n  onOpen: WS_CONNECTED_SUCCESSFULLY,\r\n  onError: WS_ERROR,\r\n  onGotOrders: WS_GOT_ORDERS,\r\n  sendMessage: WS_SEND_MESSAGE,\r\n  closeConnection: WS_CLOSE_CONNECTION,\r\n  onClose: WS_DISCONNECTED,\r\n  setOrderInModal: SET_DETAILED_ORDER_IN_MODAL,\r\n};\r\n\r\nexport type TwsActions = {\r\n  openConnection: typeof WS_OPEN_CONNECTION,\r\n  onOpen: typeof WS_CONNECTED_SUCCESSFULLY,\r\n  onError: typeof WS_ERROR,\r\n  onGotOrders: typeof WS_GOT_ORDERS,\r\n  sendMessage: typeof WS_SEND_MESSAGE,\r\n  closeConnection: typeof WS_CLOSE_CONNECTION,\r\n  onClose: typeof WS_DISCONNECTED,\r\n  setOrderInModal: typeof SET_DETAILED_ORDER_IN_MODAL,\r\n};\r\n\r\n\r\nexport interface IsetOrderInModalAction {\r\n  readonly type: typeof SET_DETAILED_ORDER_IN_MODAL;\r\n  readonly orderData: TOrder,\r\n}\r\n\r\nexport interface IopenConnectionAction {\r\n  readonly type: typeof WS_OPEN_CONNECTION;\r\n}\r\n\r\nexport const openConnectionAction = (): IopenConnectionAction => {\r\n  return {\r\n    type: WS_OPEN_CONNECTION\r\n  };\r\n};\r\n\r\nexport interface IonOpenAction {\r\n  readonly type: typeof WS_CONNECTED_SUCCESSFULLY;\r\n}\r\n\r\nexport const onOpenAction = (): IonOpenAction => {\r\n  return {\r\n    type: WS_CONNECTED_SUCCESSFULLY\r\n  };\r\n}\r\n\r\nexport interface IonErrorAction {\r\n  readonly type: typeof WS_ERROR;\r\n}\r\n\r\nexport const onErrorAction = (): IonErrorAction => {\r\n  return {\r\n    type: WS_ERROR\r\n  };\r\n}\r\n\r\nexport interface IonGotOrdersAction {\r\n  readonly type: typeof WS_GOT_ORDERS;\r\n  readonly ordersData: TOrdersStoreData;\r\n}\r\n\r\nexport const onGotOrdersAction = (ordersData: TOrdersStoreData): IonGotOrdersAction => {\r\n  return {\r\n    type: WS_GOT_ORDERS,\r\n    ordersData,\r\n  };\r\n}\r\n\r\nexport interface IsendMessageAction {\r\n  readonly type: typeof WS_SEND_MESSAGE;\r\n  readonly payload: string,\r\n  \r\n}\r\n\r\nexport const sendMessageAction = (message: string): IsendMessageAction => {\r\n  return {\r\n    type: WS_SEND_MESSAGE,\r\n    payload: message,\r\n  };\r\n}\r\n\r\nexport interface IcloseConnectionAction {\r\n  readonly type: typeof WS_CLOSE_CONNECTION;\r\n}\r\n\r\nexport const closeConnectionAction = (): IcloseConnectionAction => {\r\n  return {\r\n    type: WS_CLOSE_CONNECTION\r\n  };\r\n}\r\n\r\nexport interface IonCloseAction {\r\n  readonly type: typeof WS_DISCONNECTED;\r\n}\r\n\r\nexport const onCloseAction = (): IonCloseAction => {\r\n  return {\r\n    type: WS_DISCONNECTED\r\n  };\r\n}\r\n\r\nexport type TwsActionsUnion = IopenConnectionAction | IonOpenAction | IonErrorAction | IonGotOrdersAction | IsendMessageAction | IcloseConnectionAction | IcloseConnectionAction | IonCloseAction | IsetOrderInModalAction;","import { useAppSelector, useAppDispatch } from '../../services/hooks';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport s from './feed-card.module.css';\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { TOrder, TIngredientObjData } from '../../utils/types';\r\n\r\nimport { getOrderStatus, getPrice, getCompletedIngrList, getFormattedDate } from '../../utils/utils';\r\n\r\n\r\nimport {\r\n  OPEN_MODAL,\r\n  SET_MODAL_TYPE,\r\n} from '../../services/actions/burgerVendor';\r\n\r\nimport {\r\n  SET_DETAILED_ORDER_IN_MODAL,\r\n} from '../../services/actions/wsActions';\r\n\r\ntype TFeedCard = {\r\n  orderData: TOrder,\r\n  key: number,\r\n  isPersonal: boolean,\r\n}\r\n\r\nexport function FeedCard({ orderData, isPersonal }: TFeedCard) {\r\n\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n\r\n  const allIngrCatalog = useAppSelector((state) => state.burgerVendor.ingridientsData.arrOfIngridients);\r\n\r\n  let arrOfUsedIngr: [] | Array<TIngredientObjData> = [];\r\n  let arrImages: Array<string> = []\r\n\r\n\r\n  if (allIngrCatalog && orderData) {\r\n    arrOfUsedIngr = allIngrCatalog.filter((ingr: TIngredientObjData) => orderData.ingredients.includes(ingr._id));\r\n\r\n    arrOfUsedIngr.forEach((ingr: TIngredientObjData) => { arrImages.push(ingr.image_mobile) })\r\n  }\r\n\r\n  const getIcons = (url: string, index: number) => {\r\n    return (<div className={s.imgContainer} style={{ backgroundImage: `url(${url})` }} key={index}></div>)\r\n  }\r\n\r\n  let normalizedPics = []\r\n  const formateArr = (arr: Array<string>) => {\r\n\r\n    if (arr.length < 1) {\r\n      return [];\r\n    }\r\n\r\n    let normalizedArr = arr.map(i => i);\r\n\r\n    if (normalizedArr.length > 5) {\r\n      normalizedArr.length = 5;\r\n    }\r\n\r\n    normalizedArr.reverse();\r\n\r\n    return normalizedArr;\r\n  }\r\n\r\n  normalizedPics = formateArr(arrImages);\r\n\r\n  const openIngridientDetails = () => {\r\n    dispatch({\r\n      type: OPEN_MODAL,\r\n    });\r\n    dispatch({\r\n      type: SET_MODAL_TYPE,\r\n      value: 'OrderCard',\r\n    });\r\n    dispatch({\r\n      type: SET_DETAILED_ORDER_IN_MODAL,\r\n      orderData,\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const handleClick = () => {\r\n    openIngridientDetails();\r\n\r\n    if (isPersonal) {\r\n      history.push({\r\n        pathname: `${history.location.pathname}/${orderData._id}`,\r\n        state: { profileOrderModal: location },\r\n      });\r\n    } else {\r\n      history.push({\r\n        pathname: `${history.location.pathname}/${orderData._id}`,\r\n        state: { feedModal: location },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <article className={s.main} onClick={handleClick}>\r\n      <div className={s.plane + ' mb-6'}>\r\n        <span className={s.number + ' text text_type_digits-default'}>#{orderData.number}</span>\r\n        <span className={' text text_type_main-default text_color_inactive'}>{getFormattedDate(orderData.createdAt)}</span>\r\n      </div>\r\n      <h4 className={s.header + ' text text_type_main-medium mb-2'}>{orderData.name}</h4>\r\n      {isPersonal ? (<span className={' text text_type_main-default text_color_inactive mb-2'}>{getOrderStatus(orderData.status)}</span>) : null}\r\n      <div className={s.plane}>\r\n        <div className={s.iconsContainer}>\r\n          {normalizedPics && normalizedPics.map((url: string, index) => (getIcons(url, index)))}\r\n        </div>\r\n\r\n        <div className={s.price}><span className={' text text_type_digits-default mr-2'}>{getPrice(getCompletedIngrList(orderData, allIngrCatalog))}</span><CurrencyIcon type=\"primary\" /></div>\r\n      </div>\r\n    </article >\r\n  );\r\n}\r\n","import { useAppSelector } from '../../services/hooks';\r\nimport { FeedCard } from '../feed-card/feed-card';\r\nimport s from './scrollable-list.module.css';\r\nimport { TOrder } from '../../utils/types';\r\n\r\n\r\ntype TScrollableListProps = {\r\n  isPersonal: boolean,\r\n}\r\n\r\nexport function ScrollableList({ isPersonal }: TScrollableListProps) {\r\n\r\n  const currentOrders: ReadonlyArray<TOrder> = useAppSelector((store) => store.ws.ordersData.orders);\r\n\r\n  let reversedOrdersList: Array<TOrder> = [];\r\n  if (currentOrders && isPersonal) {\r\n    reversedOrdersList = currentOrders.slice();\r\n    reversedOrdersList = reversedOrdersList.reverse();\r\n  }\r\n\r\n  return (\r\n    <article className={s.main}>\r\n\r\n      {!isPersonal && currentOrders && currentOrders.map((order: TOrder) => <FeedCard orderData={order} isPersonal={isPersonal} key={order.number} />)}\r\n\r\n      {isPersonal && reversedOrdersList && reversedOrdersList.map((order: TOrder) => <FeedCard orderData={order} isPersonal={isPersonal} key={order.number} />)}\r\n\r\n    </article>\r\n  );\r\n}","import { useEffect } from \"react\";\r\nimport { useAppDispatch } from '../services/hooks';\r\nimport { confirmAuthThunk } from '../services/actions/userActions';\r\nimport { wsActions } from '../services/actions/wsActions';\r\nimport styles from './profile.module.css';\r\nimport { ProfileMenu } from '../components/profile-menu/profile-menu';\r\nimport { getAccessTokenLiteral } from '../utils/cookie';\r\nimport { wsOrders } from '../utils/api-url';\r\nimport { ScrollableList } from '../components/scrollable-list/scrollable-list';\r\n\r\nexport function ProfileOrdersPage() {\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(confirmAuthThunk());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: wsActions.openConnection,\r\n      url: wsOrders + `?token=${getAccessTokenLiteral()}`,     \r\n    });\r\n    return () => {\r\n      dispatch({ type: wsActions.closeConnection });\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <section className={styles.wrap}>\r\n      <ProfileMenu activeTab={'orderHistory'} />\r\n      <div className={styles.profileInfo + \" profile-inputs\"}>\r\n\r\n        <ScrollableList isPersonal={true} />\r\n\r\n      </div>\r\n    </section>\r\n  );\r\n}","import { useParams } from \"react-router-dom\";\r\nimport { useAppSelector } from '../services/hooks';\r\nimport IngredientDetais from '../components/ingridient-details/ingridient-details';\r\nimport { TIngredientObjData } from '../utils/types';\r\n\r\n\r\nexport function IngridientPage() {\r\n  const { id } = useParams<{ id?: string }>();\r\n\r\n  const { arrOfIngridients } = useAppSelector((store) => store.burgerVendor.ingridientsData);\r\n\r\n  const ingridientProp = arrOfIngridients.find((ingr: TIngredientObjData) => ingr._id === id);\r\n\r\n  if (!ingridientProp) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div style={{ paddingTop: 80, }}>\r\n      <IngredientDetais ingredientData={ingridientProp} />\r\n    </div>\r\n  );\r\n}","import { useEffect } from 'react';\r\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\r\nimport { ScrollableList } from '../components/scrollable-list/scrollable-list';\r\nimport { wsActions } from '../services/actions/wsActions';\r\nimport { TOrder } from '../utils/types';\r\nimport { wsAllOrders } from '../utils/api-url';\r\nimport s from './feed.module.css';\r\n\r\nexport function FeedPage() {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const currentOrders: ReadonlyArray<TOrder> = useAppSelector((store) => store.ws.ordersData.orders);\r\n  const ordersTotalToday = useAppSelector((store) => store.ws.ordersData.totalToday);\r\n  const ordersTotalEver = useAppSelector((store) => store.ws.ordersData.total);\r\n\r\n  const оrdersDone: number[] = [];\r\n  const оrdersInWork: number[] = [];\r\n\r\n  if (currentOrders) {\r\n    currentOrders.forEach((item: TOrder) => {\r\n      if (item.status === 'done') {\r\n        оrdersDone.push(item.number);\r\n      } else {\r\n        оrdersInWork.push(item.number);\r\n      }\r\n    });\r\n  }\r\n\r\n  const getLiElement = (orderNumber: number, key: number) => {\r\n    return (<li className={s.liElem + ' text text_type_digits-default mb-2'} key={key}>{orderNumber}</li>)\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: wsActions.openConnection,\r\n      url: wsAllOrders, \r\n    });\r\n    return () => {\r\n      dispatch({ type: wsActions.closeConnection });\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <section className={s.headerSection}>\r\n        <h1 className=\"text text_type_main-large\">Лента заказов</h1>\r\n      </section>\r\n\r\n      <section className={s.feedData}>\r\n\r\n        <section className={s.feedContent}>\r\n          <ScrollableList isPersonal={false} />\r\n        </section>\r\n\r\n        <section className={s.feedChart}>\r\n\r\n          <div className={s.currentOrders}>\r\n\r\n            <div className={s.currentChart}>\r\n              <span className={'text text_type_main-medium mb-6'}>Готовы</span>\r\n              <ul className={s.ul} style={{ color: '#00CCCC' }}>\r\n                {оrdersDone.slice(0, 18).map((item) => getLiElement(item, item))}\r\n              </ul>\r\n            </div>\r\n\r\n            <div className={s.currentChart}>\r\n              <span className={'text text_type_main-medium mb-6'}>В работе</span>\r\n              <ul className={s.ul}>\r\n                {оrdersInWork.slice(0, 18).map((item) => getLiElement(item, item))}\r\n              </ul>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className={s.totalChart}>\r\n\r\n            <div className={s.totalBlock}>\r\n              <span className={s.bigHeader + ' text text_type_main-medium mt-15'}>Выполнено за всё время</span>\r\n              <span className={' text text_type_digits-large mb-15'}>{ordersTotalEver}</span>\r\n\r\n            </div>\r\n\r\n            <div className={s.totalBlock}>\r\n              <span className={s.bigHeader + ' text text_type_main-medium mt-15'}>Выполнено за сегодня</span>\r\n              <span className={' text text_type_digits-large mb-15'}>{ordersTotalToday}</span>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </section>\r\n      </section>\r\n\r\n    </>\r\n  );\r\n}","import { useEffect } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\r\nimport { getAccessTokenLiteral } from '../utils/cookie';\r\n\r\n\r\nimport { wsActions } from '../services/actions/wsActions';\r\nimport { TOrder } from '../utils/types';\r\nimport { FeedDetailedCard } from '../components/feed-detailed-card/feed-detailed-card';\r\nimport { wsAllOrders, wsOrders } from '../utils/api-url';\r\nimport {\r\n  SET_DETAILED_ORDER_IN_MODAL,\r\n} from '../services/actions/wsActions';\r\n\r\n\r\ntype TOrderPageProps = {\r\n  orderSource: 'feed' | 'personalOrder'\r\n}\r\n\r\nexport const OrderPage = ({ orderSource }: TOrderPageProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const { id } = useParams<{ id?: string }>();\r\n\r\n  const currentOrders: ReadonlyArray<TOrder> = useAppSelector((store) => store.ws.ordersData.orders);\r\n\r\n  let selectedOrder: undefined | TOrder;\r\n  if (currentOrders) {\r\n    selectedOrder = currentOrders.find(obj => obj._id === id);\r\n\r\n    dispatch({\r\n      type: SET_DETAILED_ORDER_IN_MODAL,\r\n      orderData: selectedOrder,\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    if (orderSource === 'feed') {\r\n      dispatch({\r\n        type: wsActions.openConnection,\r\n        url: wsAllOrders,\r\n      });\r\n    }\r\n\r\n    if (orderSource === 'personalOrder') {\r\n      dispatch({\r\n        type: wsActions.openConnection,\r\n        url: wsOrders + `?token=${getAccessTokenLiteral()}`,     \r\n      });\r\n    }\r\n\r\n    return () => {\r\n      dispatch({ type: wsActions.closeConnection });\r\n    };\r\n  }, [dispatch, orderSource]);\r\n\r\n  return (\r\n    <>\r\n      {currentOrders && selectedOrder ? <FeedDetailedCard /> : null}<br />\r\n    </>\r\n  )\r\n}","import React, { useEffect } from \"react\";\n//import logo from '../../images/logo.svg';\nimport indexStyles from './app.module.css';\nimport { Route, Switch, useLocation, useHistory, } from 'react-router-dom';\nimport { useAppDispatch } from '../../services/hooks';\nimport { confirmAuthThunk } from '../../services/actions/userActions';\nimport {\n  CLOSE_MODAL,\n  getIngridientsDataThunk, SET_MODAL_TYPE,\n} from '../../services/actions/burgerVendor';\nimport { urlApiGetIngridients } from '../../utils/api-url';\nimport { ProtectedRoute } from '../protected-route/protected-route';\nimport { Location } from 'history';\nimport Modal from '../modal/modal';\nimport IngredientDetais from '../ingridient-details/ingridient-details';\nimport { useAppSelector } from '../../services/hooks';\nimport AppHeader from '../app-header/app-header';\nimport BurgerVendor from '../burger-vendor/burger-vendor';\nimport { FeedDetailedCard } from '../feed-detailed-card/feed-detailed-card';\nimport { LoginPage, RegistrationPage, ForgotPage, ResetPassword, ProfilePage, FeedPage, IngridientPage, ProfileOrdersPage, OrderPage } from '../../pages';\n\ntype TLocationState = {\n  ingredientModal?: Location;\n  feedModal?: Location;\n  profileOrderModal?: Location;\n};\n\nfunction App() {\n\n  const history = useHistory();\n  let location = useLocation<TLocationState | undefined>();\n\n  const action = history.action === 'PUSH' || history.action === 'REPLACE'; //  history.action is mutable and automatically updates as the location changes. https://github.com/remix-run/history/blob/main/docs/api-reference.md \n\n  const modalIngredientOpen = action && location.state && location.state.ingredientModal;\n  const modalFeedOrderOpen = action && location.state && location.state.feedModal;\n  const modalProfileOrderOpen = action && location.state && location.state.profileOrderModal;\n  const currentModalType = useAppSelector(state => state.burgerVendor.currentModalType);\n  const { ingrInModalData } = useAppSelector((store) => store.burgerVendor); // хранилище типизируем в следующем спринте\n\n  const dispatch = useAppDispatch();\n\n  const handleClose = () => {\n    dispatch({\n      type: CLOSE_MODAL,\n    });\n\n    dispatch({\n      type: SET_MODAL_TYPE,\n      value: 'none',\n    });\n\n    if (currentModalType === 'OrderDetails') {\n      return history.push({\n        state: { background: location },\n      })\n    }\n\n    history.goBack();\n  }\n  \n  useEffect(() => {\n    dispatch(confirmAuthThunk());\n    dispatch(getIngridientsDataThunk(urlApiGetIngridients));\n  }, [dispatch]);\n\n  return (\n    <>\n      <AppHeader />\n\n      <main className={indexStyles.main}>\n        <Switch location={modalIngredientOpen || modalFeedOrderOpen || modalProfileOrderOpen || location}>\n\n          <Route path=\"/login\">\n            <LoginPage />\n          </Route>\n\n          <Route path=\"/registration\">\n            <RegistrationPage />\n          </Route>\n\n          <Route path=\"/forgot-password\">\n            <ForgotPage />\n          </Route>\n\n          <Route path=\"/reset-password\">\n            <ResetPassword />\n          </Route>\n\n          <ProtectedRoute path=\"/profile\" exact={true}>\n            <ProfilePage />\n          </ProtectedRoute>\n\n          <ProtectedRoute path=\"/profile/orders\" exact={true}>\n            <ProfileOrdersPage />\n\n          </ProtectedRoute>\n\n          <ProtectedRoute path=\"/profile/orders/:id\">\n            <OrderPage orderSource={'personalOrder'} />\n\n          </ProtectedRoute>\n\n          <Route path=\"/ingredients/:id\">\n            <IngridientPage />\n          </Route>\n\n          <Route path=\"/feed\" exact={true}>\n            <FeedPage />\n          </Route>\n\n          <Route path=\"/feed/:id\">\n            <OrderPage orderSource={'feed'} />\n          </Route>\n\n          <Route path=\"/\" exact={true}>\n            <BurgerVendor handleClose = {handleClose} />\n          </Route>\n        </Switch>\n\n        {modalIngredientOpen && (\n            <Route path=\"/ingredients/:id\">\n              <Modal handleClose = {handleClose}>\n                <IngredientDetais ingredientData={ingrInModalData} />\n              </Modal>\n            </Route>\n        )}\n\n        {modalFeedOrderOpen && (\n            <Route path=\"/feed/:id\">\n              <Modal handleClose={handleClose}>\n                <FeedDetailedCard />\n              </Modal>\n            </Route>\n        )}\n\n        {modalProfileOrderOpen && (\n            <ProtectedRoute path=\"/profile/orders/:id\">\n              <Modal handleClose = {handleClose}>\n                <FeedDetailedCard />\n              </Modal>\n            </ProtectedRoute>\n        )}\n\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import { RootState } from '../store';\r\nimport { Middleware } from 'redux';\r\nimport { getAccessTokenLiteral } from '../../utils/cookie';\r\nimport { TwsActions } from \"../actions/wsActions\";\r\n\r\nexport const socketMiddleware = (wsActions: TwsActions): Middleware<{}, RootState> => {\r\n  return store => {\r\n    let socket: WebSocket | null = null;\r\n\r\n    return next => action => {\r\n      const { dispatch } = store;\r\n      const { type } = action;\r\n      const { payload } = action;\r\n\r\n      const {\r\n        openConnection,\r\n        onOpen,\r\n        onError,\r\n        onGotOrders,\r\n        onClose,\r\n        sendMessage,\r\n        closeConnection,\r\n      } = wsActions;\r\n\r\n      if (type === openConnection) {\r\n        socket = new WebSocket(action.url);\r\n      }\r\n\r\n      if (socket && type === closeConnection) {\r\n        socket.close();\r\n        socket = null;\r\n      }\r\n\r\n      if (socket) {\r\n\r\n        socket.onopen = () => {\r\n          dispatch({ type: onOpen });\r\n        }\r\n\r\n        socket.onerror = (event) => {\r\n          dispatch({ type: onError });\r\n        }\r\n\r\n        socket.onmessage = (event) => {\r\n          const { data } = event;\r\n          const parseData = JSON.parse(data);\r\n\r\n          dispatch({\r\n            type: onGotOrders,\r\n            ordersData: parseData,\r\n          });\r\n        }\r\n\r\n        socket.onclose = () => {\r\n          dispatch({ type: onClose });\r\n        }\r\n      }\r\n\r\n      if (socket && type === sendMessage) {\r\n        socket.send(JSON.stringify({\r\n          ...payload,\r\n          token: getAccessTokenLiteral(),\r\n        }));\r\n      }\r\n\r\n      next(action);\r\n    };\r\n  };\r\n};\r\n","import update from \"immutability-helper\";\r\nimport { TBurgerVendorActionsUnion } from '../actions/burgerVendor';\r\n\r\nimport { TOrderData, TDraggableIngr, TIngredientObjData, TModalType } from '../../utils/types';\r\n\r\nimport {\r\n    TOGGLE_MODAL_VISIBILITY,\r\n    SET_CURRENT_MODAL_TYPE,\r\n    SET_INGRIDIENT_IN_MODAL,\r\n    SET_ORDER_STATE,\r\n    INGRIDIENT_FETCH_SUCCESS,\r\n    INGRIDIENT_FETCH_ERROR,\r\n    OPEN_MODAL,\r\n    CLOSE_MODAL,\r\n    SET_MODAL_TYPE,\r\n    ADD_BUN,\r\n    ADD_SAUCE,\r\n    ADD_MAIN,\r\n    UPDATE_DRAGGABLE_INGRIDIENTS,\r\n    REMOVE_ALL_INGRIDIENTS,\r\n    RESORT_DRAGGABLE_INGRIDIENTS,\r\n    SET_CONSTRUCTOR_LOADER,\r\n} from '../actions/burgerVendor';\r\n\r\nexport type TBurgerVendorReducer = {\r\n    ingridientsData: {\r\n        arrOfIngridients: Array<TIngredientObjData>,\r\n        ingrDataIsLoading: boolean,\r\n        ingrDataHasError: boolean,\r\n    }\r\n    bun: TDraggableIngr,\r\n    draggableIngridients: Array<TDraggableIngr>,\r\n\r\n    modalIsVisible: boolean,\r\n    currentModalType: TModalType,\r\n    ingrInModalData: TIngredientObjData,\r\n    orderData: TOrderData,\r\n    constructorLoaderIsVisible: boolean,\r\n\r\n}\r\n\r\nexport const blankIngr: TIngredientObjData  = {\r\n    _id: '',\r\n    name: '',\r\n    type: 'main',\r\n    proteins: 0,\r\n    fat: 0,\r\n    carbohydrates: 0,\r\n    calories: 0,\r\n    price: 0,\r\n    image: '',\r\n    image_mobile: '',\r\n    image_large: '',\r\n    __v: 0,\r\n}\r\n\r\nexport const blankDraggableIngr: TDraggableIngr = {\r\n    _id: '',\r\n    name: '',\r\n    type: 'main',\r\n    proteins: 0,\r\n    fat: 0,\r\n    carbohydrates: 0,\r\n    calories: 0,\r\n    price: 0,\r\n    image: '',\r\n    image_mobile: '',\r\n    image_large: '',\r\n    __v: 0,\r\n    instanceID: 0,\r\n}\r\n\r\nexport const initialState: TBurgerVendorReducer = {\r\n    ingridientsData: {\r\n        arrOfIngridients: [],\r\n        ingrDataIsLoading: false,\r\n        ingrDataHasError: false,\r\n    },\r\n\r\n    bun: blankDraggableIngr,\r\n    draggableIngridients: [],\r\n\r\n    modalIsVisible: false,\r\n    currentModalType: 'none',\r\n    ingrInModalData: blankIngr,\r\n\r\n    orderData: {\r\n        success: false,\r\n        name: '',\r\n        order: {\r\n            number: '',\r\n        },\r\n    },\r\n    constructorLoaderIsVisible: false,\r\n};\r\n\r\nexport const burgerVendorReducer = (state = initialState, action: TBurgerVendorActionsUnion): TBurgerVendorReducer => {\r\n    switch (action.type) {\r\n        case TOGGLE_MODAL_VISIBILITY: {\r\n            return {\r\n                ...state,\r\n                modalIsVisible: action.value,\r\n            }\r\n        }\r\n        case SET_CURRENT_MODAL_TYPE: {\r\n            return {\r\n                ...state,\r\n                currentModalType: action.value,\r\n            }\r\n        }\r\n        case SET_INGRIDIENT_IN_MODAL: {\r\n            return {\r\n                ...state,\r\n                ingrInModalData: action.value\r\n            }\r\n        }\r\n        case SET_ORDER_STATE: {\r\n            return {\r\n                ...state,\r\n                orderData: action.value,\r\n            }\r\n        }\r\n        case INGRIDIENT_FETCH_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                ingridientsData: {\r\n                    arrOfIngridients: action.value,\r\n                    ingrDataIsLoading: false,\r\n                    ingrDataHasError: false,\r\n                },\r\n            }\r\n        }\r\n        case INGRIDIENT_FETCH_ERROR: {\r\n            return {\r\n                ...state,\r\n                ingridientsData: {\r\n                    arrOfIngridients: [],\r\n                    ingrDataIsLoading: false,\r\n                    ingrDataHasError: true\r\n                },\r\n            }\r\n        }\r\n        case OPEN_MODAL: {\r\n            return {\r\n                ...state,\r\n                modalIsVisible: true,\r\n            }\r\n        }\r\n        case CLOSE_MODAL: {\r\n            return {\r\n                ...state,\r\n                modalIsVisible: false,\r\n            }\r\n        }\r\n        case SET_MODAL_TYPE: {\r\n            return {\r\n                ...state,\r\n                currentModalType: action.value,\r\n            }\r\n        }\r\n        case ADD_BUN: {\r\n            return {\r\n                ...state,\r\n                bun: action.value,\r\n            }\r\n        }\r\n        case ADD_SAUCE: {\r\n            return {\r\n                ...state,\r\n                draggableIngridients: [\r\n                    ...state.draggableIngridients,\r\n                    action.value,\r\n                ]\r\n            }\r\n        }\r\n        case ADD_MAIN: {\r\n            return {\r\n                ...state,\r\n                draggableIngridients: [\r\n                    ...state.draggableIngridients,\r\n                    action.value,\r\n                ]\r\n            };\r\n        }\r\n        case UPDATE_DRAGGABLE_INGRIDIENTS: {\r\n            return {\r\n                ...state,\r\n                draggableIngridients: action.value\r\n            };\r\n        }\r\n        case RESORT_DRAGGABLE_INGRIDIENTS: {\r\n            const resortedArrOfIngridients = update(state.draggableIngridients, {\r\n                $splice: [\r\n                    [action.indexOfDraggedIngr, 1],\r\n                    [action.indexOfDroppedIngr, 0, state.draggableIngridients[action.indexOfDraggedIngr]],\r\n                ],\r\n            });\r\n            return {\r\n                ...state,\r\n                draggableIngridients: resortedArrOfIngridients,\r\n            }\r\n        }\r\n        case REMOVE_ALL_INGRIDIENTS: {\r\n            return {\r\n                ...state,\r\n                bun: blankDraggableIngr,\r\n                draggableIngridients: []\r\n            }\r\n        }\r\n        case SET_CONSTRUCTOR_LOADER: {\r\n            return {\r\n                ...state,\r\n                constructorLoaderIsVisible: action.value,\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import {\r\n  LOGIN_SUCCESSFUL,\r\n  LOGIN_FAILED,\r\n  LOGOUT_SUCCESSFUL,\r\n  SET_USER_DATA,\r\n  ALLOW_RESET_PASSWORD,\r\n  HAS_RESET_PASSWORD,\r\n} from '../actions/userActions';\r\n\r\nimport { TUserActionsUnion } from '../actions/userActions';\r\n\r\nexport type TUserState = {\r\n  isLoggedIn: boolean,\r\n  userName: string,\r\n  userEmail: string,\r\n  canResetPassword: boolean,\r\n  hasResetPassword: boolean,\r\n  userChecked: boolean;\r\n};\r\n\r\nexport const userInitialState: TUserState = {\r\n  isLoggedIn: false,\r\n  userName: '',\r\n  userEmail: '',\r\n  canResetPassword: false,\r\n  hasResetPassword: false,\r\n  userChecked: false,\r\n};\r\n\r\nexport const userReducer = (state = userInitialState, action: TUserActionsUnion): TUserState => {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCESSFUL: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        userName: action.name,\r\n        userEmail: action.email,\r\n        userChecked: true,\r\n      }\r\n    }\r\n\r\n    case SET_USER_DATA: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        userName: action.name,\r\n        userEmail: action.email,\r\n        userChecked: true,\r\n      }\r\n    }\r\n    case LOGIN_FAILED: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        userName: '',\r\n        userEmail: '',\r\n        userChecked: true,\r\n      }\r\n    }\r\n    case LOGOUT_SUCCESSFUL: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        userName: '',\r\n        userEmail: '',\r\n        userChecked: true,\r\n      }\r\n    }\r\n    case ALLOW_RESET_PASSWORD: {\r\n      return {\r\n        ...state,\r\n        canResetPassword: true,\r\n        hasResetPassword: false,\r\n        userChecked: true,\r\n      }\r\n    }\r\n    case HAS_RESET_PASSWORD: {\r\n      return {\r\n        ...state,\r\n        userChecked: true,\r\n        canResetPassword: false,\r\n        hasResetPassword: true,\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};","import {\r\n  WS_CONNECTED_SUCCESSFULLY,\r\n  WS_ERROR,\r\n  WS_GOT_ORDERS,\r\n  WS_DISCONNECTED,\r\n  SET_DETAILED_ORDER_IN_MODAL,\r\n  TwsActionsUnion\r\n} from '../actions/wsActions';\r\nimport { TOrder } from '../../utils/types';\r\n\r\nexport type TOrdersStoreData = {\r\n  success: null | boolean,\r\n  orders: ReadonlyArray<TOrder>,\r\n  total: number,\r\n  totalToday: number,\r\n}\r\n\r\nexport type TwsState = {\r\n  wsConnected: boolean,\r\n  wsError: boolean,\r\n  ordersData: TOrdersStoreData,\r\n  detailedOrder: TOrder,\r\n}\r\n\r\n\r\nexport const wsInitialState: TwsState = {\r\n  wsConnected: false,\r\n  wsError: false,\r\n  ordersData: {\r\n    success: null,\r\n    orders: [],\r\n    total: 0,\r\n    totalToday: 0,\r\n  },\r\n  detailedOrder: {\r\n    ingredients: [],\r\n    _id: '',\r\n    status: 'pending',\r\n    number: 0,\r\n    createdAt: '',\r\n    updatedAt: '',\r\n    name: '',\r\n  },\r\n};\r\n\r\nexport const wsReducer = (state = wsInitialState, action: TwsActionsUnion): TwsState => {\r\n  switch (action.type) {\r\n    case WS_CONNECTED_SUCCESSFULLY:\r\n      return {\r\n        ...state,\r\n        wsConnected: true,\r\n        wsError: false,\r\n      };\r\n    case WS_GOT_ORDERS:\r\n      return {\r\n        ...state,\r\n        ordersData: action.ordersData,\r\n      };\r\n    case WS_DISCONNECTED:\r\n      return {\r\n        ...state,\r\n        wsConnected: false,\r\n      };\r\n    case WS_ERROR:\r\n      return {\r\n        ...state,\r\n        wsConnected: false,\r\n        wsError: true,\r\n      }\r\n    case SET_DETAILED_ORDER_IN_MODAL:\r\n      return {\r\n        ...state,\r\n        detailedOrder: action.orderData,\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import { combineReducers } from 'redux';\r\nimport { burgerVendorReducer } from './burgerVendor';\r\nimport { userReducer } from './user';\r\nimport { wsReducer } from './wsReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    burgerVendor: burgerVendorReducer,\r\n    user: userReducer,\r\n    ws: wsReducer,\r\n  });","import { socketMiddleware } from './middleware';\r\nimport { wsActions, TwsActionsUnion } from './actions/wsActions';\r\nimport { TBurgerVendorActionsUnion } from './actions/burgerVendor';\r\nimport { TUserActionsUnion } from './actions/userActions';\r\n\r\nimport { rootReducer } from './reducers';\r\nimport { createStore, compose, applyMiddleware, Action, ActionCreator } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport const wsCreatedMiddleware = socketMiddleware(wsActions);\r\nexport type TApplicationActionsUnion = TBurgerVendorActionsUnion | TUserActionsUnion | TwsActionsUnion;\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk, wsCreatedMiddleware));\r\n\r\nexport const store = createStore(rootReducer, enhancer);\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport type AppThunk<ReturnType = void> = ActionCreator<ThunkAction<ReturnType, Action, RootState, TApplicationActionsUnion>>; // это, конечно, совершенно чудовищная конструкция\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { store } from './services/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/react-stellar-burger\">\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"auth-form_wrap__158Dt\",\"form\":\"auth-form_form__3RPIf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingridiensContainer\":\"burger-ingredients_ingridiensContainer__16fM9\",\"tabs\":\"burger-ingredients_tabs__1y6yZ\",\"ingrDisplay\":\"burger-ingredients_ingrDisplay__3DhXk\",\"ingrShowcase\":\"burger-ingredients_ingrShowcase__2so1l\",\"ingrList\":\"burger-ingredients_ingrList__3t5xe\",\"zaglushka\":\"burger-ingredients_zaglushka__IeyDf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"feed-card_main__1Ds3t\",\"plane\":\"feed-card_plane__13VG7\",\"number\":\"feed-card_number__3kb-F\",\"header\":\"feed-card_header__3fgx4\",\"price\":\"feed-card_price__2lidk\",\"iconsContainer\":\"feed-card_iconsContainer__1xca6\",\"imgContainer\":\"feed-card_imgContainer__ENK4C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"burger-constructor_container__mJDwn\",\"chosenIngridients\":\"burger-constructor_chosenIngridients__kBswj\",\"topIngridinet\":\"burger-constructor_topIngridinet__35RSH\",\"bottomIngridinet\":\"burger-constructor_bottomIngridinet__2SGPL\",\"draggableIngridinetContainer\":\"burger-constructor_draggableIngridinetContainer__2Tw2k\",\"draggableItime\":\"burger-constructor_draggableItime__3on7s\",\"draggableButton\":\"burger-constructor_draggableButton__3lS0m\",\"totalBar\":\"burger-constructor_totalBar__bvuvq\",\"loader\":\"burger-constructor_loader__22JJW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"profile_wrap__1o5qa\",\"profileInfo\":\"profile_profileInfo__UbS8v\",\"buttonWrap\":\"profile_buttonWrap__3sRYX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingrCard\":\"ingridient-card_ingrCard__3SXR4\",\"price\":\"ingridient-card_price__6mBMj\",\"itemPic\":\"ingridient-card_itemPic__cfyXv\",\"counter\":\"ingridient-card_counter__3mloX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__3eezL\",\"closeButton\":\"modal_closeButton__3v-X8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerSection\":\"burger-vendor_headerSection__6LwEo\",\"constructorContainer\":\"burger-vendor_constructorContainer__39UNx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"draggableItime\":\"draggable-item_draggableItime__2gdzt\",\"draggableButton\":\"draggable-item_draggableButton__1QYCp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"profile-tab_tab__EZay6\",\"tab_type_current\":\"profile-tab_tab_type_current__36q0q\"};"],"sourceRoot":""}